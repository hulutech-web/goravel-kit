{"version":3,"file":"model.9a27e3f0.1755837291293.js","sources":["../../src/pages/system/crud/templates/model.ts"],"sourcesContent":["interface Model{\r\n    name:string\r\n    field_type:string\r\n    gorm:string\r\n    form:string\r\n    json:string\r\n}\r\n//fieldArr 为Model的数组类型\r\nconst createModel = (modelName: string, fieldArr: Model[]): string => {\r\n    let templateModelStr = `package models\r\n\r\nimport (\r\n\t\"github.com/goravel/framework/database/orm\"\r\n\t\"goravel/packages/goravel-crud/core/curd_orm\"\r\n)\r\n\r\ntype ${toUpperCamelCase(modelName)} struct {\r\n\torm.Model`;\r\n\r\n    // 如果需要支持软删除，请添加这一行\r\n    // templateModelStr += `\r\n    // orm.SoftDeletes`;\r\n\r\n    fieldArr.forEach(field => {\r\n        const fieldName = toCamelCase(field.name);\r\n        const fieldType = field.field_type;\r\n        const tags = `gorm:\"${field.gorm}\" form:\"${field.form}\" json:\"${field.json}\"`;\r\n        templateModelStr += `\r\n\t${fieldName} ${fieldType} \\`${\r\n            tags\r\n        }\\``;\r\n    });\r\n\r\n\r\n    templateModelStr += `\r\n}`;\r\n    let regist_model=`\r\n    func init() {\r\n   curd_orm.RegisterModel(&User{})\r\n}`\r\n    templateModelStr+=regist_model\r\n    return templateModelStr;\r\n};\r\n\r\nfunction toCamelCase(str: string): string {\r\n    return str.replace(/([-_][a-z])/gi, ($1) => {\r\n        return $1.toUpperCase().replace('-', '').replace('_', '');\r\n    });\r\n}\r\n\r\n// 将字符串转换为大驼峰命名（upper camel case）\r\nfunction toUpperCamelCase(str: string): string {\r\n    const lowerCamel = toLowerCamelCase(str);\r\n    return lowerCamel.charAt(0).toUpperCase() + lowerCamel.slice(1);\r\n}\r\n\r\n// 将字符串转换为小驼峰命名（lower camel case）\r\nfunction toLowerCamelCase(str: string): string {\r\n    return str\r\n        .toLowerCase() // 确保一致性，先全部转为小写\r\n        .replace(/([-_][a-z])/gi, ($1) =>\r\n            $1.toUpperCase().replace('-', '').replace('_', '') // 将'-x'或'_x'转为'X'\r\n        )\r\n        .replace(/^./, (str) => str.toLowerCase()); // 确保第一个字符是小写\r\n}\r\n\r\nexport {\r\n    createModel\r\n}"],"names":["createModel","modelName","fieldArr","templateModelStr","toUpperCamelCase","field","fieldName","toCamelCase","fieldType","tags","str","$1","lowerCamel","toLowerCamelCase"],"mappings":"AAQM,MAAAA,EAAc,CAACC,EAAmBC,IAA8B,CAClE,IAAIC,EAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOpBC,EAAiBH,CAAS,CAAC;AAAA,YAO9B,OAAAC,EAAS,QAAiBG,GAAA,CAChB,MAAAC,EAAYC,EAAYF,EAAM,IAAI,EAClCG,EAAYH,EAAM,WAClBI,EAAO,SAASJ,EAAM,IAAI,WAAWA,EAAM,IAAI,WAAWA,EAAM,IAAI,IACtDF,GAAA;AAAA,GACzBG,CAAS,IAAIE,CAAS,MACbC,CACJ,IAAA,CACH,EAGmBN,GAAA;AAAA,GAMFA,GAJD;AAAA;AAAA;AAAA,GAKVA,CACX,EAEA,SAASI,EAAYG,EAAqB,CACtC,OAAOA,EAAI,QAAQ,gBAAkBC,GAC1BA,EAAG,YAAc,EAAA,QAAQ,IAAK,EAAE,EAAE,QAAQ,IAAK,EAAE,CAC3D,CACL,CAGA,SAASP,EAAiBM,EAAqB,CACrC,MAAAE,EAAaC,EAAiBH,CAAG,EAChC,OAAAE,EAAW,OAAO,CAAC,EAAE,cAAgBA,EAAW,MAAM,CAAC,CAClE,CAGA,SAASC,EAAiBH,EAAqB,CACpC,OAAAA,EACF,cACA,QAAQ,gBAAkBC,GACvBA,EAAG,YAAY,EAAE,QAAQ,IAAK,EAAE,EAAE,QAAQ,IAAK,EAAE,CAAA,EAEpD,QAAQ,KAAOD,GAAQA,EAAI,aAAa,CACjD"}