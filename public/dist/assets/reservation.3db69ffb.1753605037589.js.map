{"version":3,"file":"reservation.3db69ffb.1753605037589.js","sources":["../../src/components/appointment-calendar/options.ts","../../src/components/appointment-calendar/index.vue","../../src/pages/schedule/reservation.vue"],"sourcesContent":["import dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport momentPlugin from \"@fullcalendar/moment\";\nimport listPlugin from '@fullcalendar/list';\nimport zhLocale from \"@fullcalendar/core/locales/zh-cn\";\nimport Api from \"@/api\"\nconst colorPalette = [\n    '#FF0000', // Vivid Red\n    '#FF4500', // Orange Red\n    '#FFA500', // Orange\n    '#FFD700', // Gold\n    '#FFFF00', // Yellow\n    '#9ACD32', // Yellow Green\n    '#00FF00', // Lime\n    '#00FA9A', // Medium Spring Green\n    '#00FFFF', // Cyan\n    '#1E90FF', // Dodger Blue\n    '#0000FF', // Blue\n    '#8A2BE2', // Blue Violet\n    '#9932CC', // Dark Orchid\n    '#FF00FF', // Magenta\n    '#FF1493', // Deep Pink\n    '#FF69B4', // Hot Pink\n    '#FF6347', // Tomato\n    '#FF8C00', // Dark Orange\n    '#7CFC00', // Lawn Green\n    '#40E0D0'  // Turquoise\n];\n\nfunction getRandomColor() {\n    return colorPalette[Math.floor(Math.random() * colorPalette.length)];\n}\n\nconst formatTime = (timeString) => {\n    const time = new Date(timeString);\n    const hours = time.getHours().toString().padStart(2, '0');\n    const minutes = time.getMinutes().toString().padStart(2, '0');\n    return `${hours}:${minutes}`;\n}\nconst baseUrl = import.meta.env.VITE_API_URL;\nconst port = import.meta.env.VITE_API_PORT;\n\n\nexport default (eventClickCallback, dateClickCallback,\n                eventDidMountCallback,\n                selEventCallback,\n                eventAddCallback,\n                eventChangeCallback,\n                eventContentCallback,\n                eventMouseEnterCallback,\n                eventMouseLeaveCallback,\n                eventDropCallback,coach_id) => {\n    return {\n\n        aspectRatio: 20,\n        expandRows: false,\n        plugins: [\n            dayGridPlugin,\n            interactionPlugin,\n            timeGridPlugin,\n            momentPlugin,\n            listPlugin\n        ],\n        themeSystem: 'bootstrap', // 使用主题系统\n        //eventBackgroundColor: 'rgb(214,231,254)', // 事件背景色\n        eventBorderColor: '#3788d8', // 事件边框色\n        // 高度：每一格400px\n        height: \"1000px\",\n        slotEventOverlap: false,\n        slotMinTime: \"09:00:00\",\n        slotMaxTime: \"21:00:00\",\n        initialView: \"timeGridDay\",\n        // dayHeaderFormat: {\n        //     weekday: \"short\",\n        // },\n        contentHeight:600,\n        slotDuration: \"00:10:00\",\n        slotLabelInterval: \"01:00:00\",\n        selectMirror: false,\n        locale: zhLocale,\n        buttonText: {\n            month: \"月\",\n            week: \"周\",\n            day: \"日\",\n            list:\"列表\",\n        },\n        headerToolbar: {\n            left: \"prev,next today\",\n            center: \"title\",\n            right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\n        },\n        customButtons: {\n            button: {\n                text: 'custom',\n                click: function () {\n                    alert('clicked the custom button!');\n                }\n            }\n        },\n        editable: false,\n        selectable: false,//禁止按下拖动添加事件\n        weekNumbers: true,\n        views: {\n            timeGridFourDay: {\n                type: \"timeGrid\",\n                duration: {\n                    days: 7,\n                },\n            },\n        },\n        events: async (fetchInfo, successCallback, failureCallback) => {\n            console.log(\"1、fetchInfo\",coach_id)\n            let data = await Api.scheduleController.list({startStr: fetchInfo.startStr, endStr: fetchInfo.endStr,coach_id:coach_id})\n            let req = data.map(item => {\n                return {\n                    ...item,\n                    title: item.course.title,\n                    start: item.start_time,\n                    end: item.end_time,\n                }\n            })\n            console.log(\"1、req\",req)\n            await successCallback(req)\n            return false;\n        },\n        eventClick: (info) => {\n            eventClickCallback(info)\n        },\n        // 点击空白处触发\n        dateClick: function (info) {\n            dateClickCallback(info)\n        },\n        eventDidMount: function (info) {\n            //每一个事件都会触发\n            eventDidMountCallback(info)\n        },\n        select: function (info) {\n            // 转换为中国时间\n            let startTime = new Date(info.start.setHours(info.start.getHours() + 8));\n            let endTime = new Date(info.end.setHours(info.end.getHours() + 8));\n            let newColor = getRandomColor()\n            this.setOption('eventColor', newColor);\n            // 创建新的事件对象，并设置颜色\n            let event = {\n                title: '新事件', // 事件标题\n                start: startTime, // 开始时间\n                end: endTime, // 结束时间\n                backgroundColor: newColor, // 设置背景颜色\n                borderColor: newColor, // 设置边框颜色，可选\n                textColor: 'white', // 设置文字颜色，可选\n            };\n            //临时事件到页面\n            selEventCallback(event);\n        },\n        eventAdd: function (info) {\n            eventAddCallback(info)\n        },\n        eventChange: function (info) {\n            console.log(\"1、eventChange\", info)\n            eventChangeCallback(info)\n        },\n        eventContent: (arg, createElement) => {\n            const startTime = arg.event.start;\n            const endTime = arg.event.end;\n            //获取背景颜色\n            const color = arg.backgroundColor;\n            // 创建一个容器元素来包裹事件内容\n            const containerEl = document.createElement('div');\n            containerEl.style.height = '100%';\n            containerEl.style.overflow = 'hidden'; // 防止内容溢出\n            // 设置containerEl的css属性\n            containerEl.innerHTML = `\n            <div style='background-color:${color};height:100%;max-width:300px;'>\n            <div class='bg-gray-800  text-md font-bold' style=\"box-sizing:border-box;max-width:300px;\">\n            ⏰${formatTime(startTime)} - ${formatTime(endTime)}${arg.event.title} #${arg.event.id}\n            </div>\n                <div style='padding:6px;box-sizing:border-box;'>\n                    <div class='text-xl font-bold'>👩🏻‍🏫${arg.event.extendedProps.coach?arg.event.extendedProps.coach.username:'未知'}</div>\n                    <div class='flex justify-between items-center overflow-hidden'>\n                        <div>${arg.event.title ? arg.event.title : \"未知\"}</div>\n                        <div>${arg.event.extendedProps.course? arg.event.extendedProps.course.venue.name : \"未知\"}</div>\n                    </div>\n                    <div class='flex justify-between items-center overflow-hidden'>\n                        <div>约${arg.event.extendedProps.schedule ? arg.event.extendedProps.schedule : \"未知\"}</div>\n                        <div>签${arg.event.extendedProps.sign ? arg.event.extendedProps.sign : \"未知\"}</div>\n                    </div>\n                </div>\n    </div>\n    `;\n            eventContentCallback(arg, createElement, containerEl)\n            return {domNodes: [containerEl]};\n        },\n        eventMouseEnter: function (info) {\n            eventMouseEnterCallback(info)\n        },\n        eventMouseLeave: function (info) {\n            eventMouseLeaveCallback(info)\n        },\n        eventDrop: function (info) {\n            eventDropCallback(info)\n        },\n        dayMaxEventRows:2,\n        // 设置中国时区【坑】\n        timeZone: 'local',\n        dayHeaderContent: function (args) {\n            //设置背景色，设置字体大小，使用h函数\n            return h('div', {\n                style: {\n                    width: '100%',\n                    lineHeight: '50px',\n                    fontSize: '18px',\n                    height: '50px',\n                    color:'#1E90FFFF'\n                }\n            }, args.text);\n        }\n    }\n}","<template>\n  <div>\n    <!-- 团课课程预约 -->\n    <FullCalendar :options=\"calendarOptions\" ref=\"fullCalendarRef\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport dayjs from \"dayjs\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport useOpts from \"./options\";\nimport { toReactive } from \"@vueuse/core\";\n\nconst instance = getCurrentInstance();\nconst { proxy } = instance;\nconst fullCalendarRef = ref();\nconst props = defineProps({\n  modelValue: {\n    type: Array,\n    default: () => []\n  },\n  coach_id:{\n    type:Number,\n    default:0\n  }\n});\n\nconst emit = defineEmits([\"update:modelValue\",\"update:coach_id\"]);\n\ninterface TagEvent {\n  id: string,\n  num: number,\n  title:string,\n  course_id:number\n  course_name:string\n  start:string,\n  end:string\n  coverimage:string\n}\nconst tagArr = ref<TagEvent[]>([])\n\nconst listenTag = (row) => {\n  //查找tagArr中是否存在id\n  const index = tagArr.value.findIndex((item) => item.id === row.id);\n  if (index === -1) {\n    tagArr.value.push(row);\n    return true\n  } else {\n    //如果存在，则将num加1\n    tagArr.value.splice(index, 1)\n    return false\n  }\n}\n\n// UTC格式化成本地时间\nconst formatLocalTime = (\n    timeStr: string,\n    formatter = \"YYYY-MM-DD HH:mm:ss\"\n) => {\n  if (!(timeStr && dayjs(timeStr))) return \"\";\n  // 使用 Day.js 的 parse 函数将 FullCalendar 时间解析为 Day.js 对象\n  const parsedTime = dayjs(timeStr);\n  //显示中国时间减去8小时\n  const localTime = parsedTime.subtract(8, \"hours\");\n\n  // 将 Day.js 对象格式化为所需的格式，例如 'YYYY-MM-DD HH:mm:ss'\n  const formattedTime = localTime.format(\"YYYY-MM-DD HH:mm:ss\");\n\n  return formattedTime;\n};\nconst heartbeatStyle = {\n  animation: 'heartbeat .1s infinite alternate',\n};\n\n// #region 功能函数\nconst evClickCbk = (info) => {\n  const eventEl = info.el;\n  if (listenTag(info.event)) {\n    Object.assign(eventEl.style, heartbeatStyle);\n  } else {\n    eventEl.style.removeProperty('animation');\n  }\n  let resultArr = [];\n  // 获取为单数的\n  resultArr = tagArr.value\n  //需要组成的数组\n  // console.log(\"evClickCbk==>\",resultArr);\n  emit(\"update:modelValue\", resultArr);\n};\nconst dtClickCbk = (info) => {\n  console.log(\"子组件：空白处被点击\", info);\n};\nconst mountedCbk = (info) => {\n  // console.log(\"子组件：任意时间触发时\", info)\n  const eventEl = info.el;\n  eventEl.style.maxWidth=\"300px\";\n  // 添加平滑的悬停动画效果\n  eventEl.style.transition = \"all 0.3s ease-out\"; // 修正拼写错误并优化时间\n\n  // 初始状态\n  eventEl.style.transform = \"scale(1)\";\n  eventEl.style.boxShadow = \"0 2px 5px rgba(0, 0, 0, 0.1)\";\n  eventEl.style.margin=\"10px\"\n\n  // 鼠标悬停效果\n  eventEl.addEventListener('mouseenter', () => {\n    eventEl.style.boxShadow = \"0 5px 15px rgba(0, 0, 0, 0.5)\";\n    eventEl.style.transform = \"scale(0.98)\";\n    eventEl.style.zIndex = \"100\"; // 确保悬停元素在上层\n  });\n\n  // 鼠标离开效果\n  eventEl.addEventListener('mouseleave', () => {\n    eventEl.style.boxShadow = \"0 2px 5px rgba(0, 0, 0, 0.1)\";\n    eventEl.style.transform = \"scale(1)\";\n    eventEl.style.zIndex = \"\";\n  });\n};\nconst selCbk = (event) => {\n  console.log(\"子组件：选择事件选择\", event);\n};\nconst evtAddCbk = (info) => {\n  // console.log(\"子组件：添加事件被触发\", info);\n};\nconst evtCbk = (info) => {\n  console.log(\"子组件：事件被触发\", info);\n};\nconst evtContentCbk = (arg, createElement, containerEl) => {\n  console.log(\"子组件：自定义样式\");\n};\nconst evtMouseEnterCbk = (info) => {\n\n};\nconst evtMouseLeaveCbk = (info) => {\n\n};\nconst eventDropCbk = (info) => {\n  console.log(\"子组件：拖拽事件时\");\n};\n\nlet calendarOptions = useOpts(\n    evClickCbk,\n    dtClickCbk,\n    mountedCbk,\n    selCbk,\n    evtAddCbk,\n    evtCbk,\n    evtContentCbk,\n    evtMouseEnterCbk,\n    evtMouseLeaveCbk,\n    eventDropCbk,\n    props.coach_id,\n);\n\n\nwatch(()=>props.coach_id,(newVal)=>{\n  calendarOptions = useOpts(\n      evClickCbk,\n      dtClickCbk,\n      mountedCbk,\n      selCbk,\n      evtAddCbk,\n      evtCbk,\n      evtContentCbk,\n      evtMouseEnterCbk,\n      evtMouseLeaveCbk,\n      eventDropCbk,\n      newVal,\n  );\n})\n//获取所有事件\nconst getEvents = () => {\n  return proxy.$refs[\"fullCalendar\"].getApi().view.calendar.getEvents();\n};\n// 通过ID获取事件\nconst getEventById = (id) => {\n  return proxy.$refs[\"fullCalendar\"].getApi().view.calendar.getEventById(id);\n};\n// 添加事件\nconst addEvent = (event) => {\n  console.log(2, \"添加事件到页面--未提交后台\", event);\n  // const calendarApi = fullCalendarRef.value.getApi();\n  // calendarApi.addEvent(event);\n};\n\n// 通过id删除事件\nconst removeEventById = (event) => {\n  let calendarApi = proxy.$refs[\"fullCalendar\"].getApi();\n  let calendarFunc = calendarApi.view.calendar;\n  let getEvents = calendarFunc.getEvents(); //获取数据\n  if (getEvents && getEvents.length > 0) {\n    //循环删除数据（通过ID）\n    getEvents.map((item) => {\n      if (item.id === event.id) {\n        calendarFunc.getEventById(item.id).remove();\n      }\n    });\n  }\n};\n\n// 删除所有事件\nconst removeAllEvents = () => {\n  let calendarApi = proxy.$refs[\"fullCalendar\"].getApi();\n  let calendarFunc = calendarApi.view.calendar;\n  let getEvents = calendarFunc.getEvents(); //获取数据\n  getEvents.map((item) => {\n    item.remove();\n  });\n};\n\nconst refresh = () => {\n  console.log(\"refresh\");\n  const calendarApi = fullCalendarRef.value.getApi();\n  calendarApi.removeAllEvents();\n  calendarApi.refetchEvents();\n};\n\n// 对外暴露方法refresh\ndefineExpose({\n  refresh,\n});\n// #endregion\n</script>\n\n<style>\n@keyframes heartbeat {\n  0% {\n    /*心跳放大*/\n    opacity: 0.9;\n    transform: rotate(0.2deg);\n  }\n\n  100% {\n    /*心跳缩小*/\n    opacity: 1;\n    transform: rotate(-0.2deg);\n  }\n}\n.fc-event {\n  margin-bottom: 2px !important; /* 添加事件间的小间隔 */\n  box-sizing: border-box !important;\n}\n\n.fc-event-main {\n  overflow: hidden !important;\n}\n</style>","<template>\n  <div>\n    <a-row :gutter=\"[16, 16]\">\n      <a-col :span=\"16\">\n        <AppointCalendar v-model=\"gschedule_info\" v-model:coach_id=\"gAppointForm.coach_id\" ref=\"calRef\"/>\n      </a-col>\n      <a-col :span=\"8\">\n        <a-card>\n          <a-form :model=\"gAppointForm\" ref=\"formRef\">\n            <a-form-item\n                label=\"选择教练\"\n                name=\"coach_id\"\n                :rules=\"[{ required: true ,message:'请选择教练'}]\"\n            >\n              <EmployeeSel v-model=\"gAppointForm.coach_id\">\n                <a-button @click=\"confirmSelect\" type=\"primary\">筛选</a-button>\n              </EmployeeSel>\n            </a-form-item>\n            <a-form-item label=\"会员\" name=\"user_id\"\n                         :rules=\"[{ required: true, message: '请选择会员', trigger: 'change' }]\">\n              <a-form-item-rest>\n                <UserSelect v-model:id=\"gAppointForm.user_id\"\n                            v-model:username=\"gAppointForm.username\"/>\n              </a-form-item-rest>\n            </a-form-item>\n            <a-form-item>\n              <a-button type=\"primary\" @click=\"onConfirm\">\n                确认约课\n              </a-button>\n            </a-form-item>\n          </a-form>\n          <a-divider> 预约：{{ gschedule_info.length }}课</a-divider>\n          <div class=\"w-full min-h-96 bg-green-200 rounded-sm mb-3 text-white p-2 box-border\">\n            <a-row :gutter=\"[16,24]\">\n              <a-col :span=\"6\" v-for=\"(gs, ind) in gschedule_info\" :key=\"ind\" class=\"appo-box\">\n                <div class=\"appo-header px-2 box-border\" :style=\"{backgroundColor:gs.backgroundColor}\">\n                  <div>{{ gs.title }}</div>\n                  <div>{{ gs.extendedProps.coach ? gs.extendedProps.coach.username : \"\" }}</div>\n                </div>\n                <div class=\"appo-content\">\n                  <div :style=\"{color:gs.backgroundColor}\">\n                    {{ dayjs(gs.startStr).format(\"YYYY-MM-DD HH:mm:ss\") }}\n                  </div>\n                  <span class=\"text-sm text-right\" :style=\"{color:gs.backgroundColor}\">\n                    {{ gs.extendedProps.course.venue.name }}\n                  </span>\n                  <div class=\"absolute bottom-0 right-0\">\n                    <a-button type=\"primary\" danger size=\"small\" @click=\"showSigned(gs)\">查看</a-button>\n                  </div>\n                </div>\n              </a-col>\n            </a-row>\n          </div>\n          <a-divider>取消预约</a-divider>\n          <a-table :columns=\"columns\" :data-source=\"users\" size=\"small\" bordered>\n            <template #bodyCell=\"{ column, record }\">\n              <template v-if=\"column.dataIndex === 'action'\">\n                <a-popconfirm\n                    title=\"确认取消吗？\"\n                    ok-text=\"是\"\n                    cancel-text=\"否\"\n                    @confirm=\"delReser(record.id)\"\n                >\n                  <a-button type=\"link\" danger>取消</a-button>\n                </a-popconfirm>\n              </template>\n              <template v-if=\"column.dataIndex === 'username'\">\n                {{ record.user.username }}\n              </template>\n            </template>\n\n          </a-table>\n        </a-card>\n      </a-col>\n    </a-row>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport dayjs from \"dayjs\"\nimport {message} from 'ant-design-vue';\nimport AppointCalendar from \"@/components/appointment-calendar/index.vue\";\nimport Api from \"@/api\"\n\nconst formRef = ref()\nconst calRef = ref()\nconst gschedule_info = ref([])\nwatch(() => gschedule_info, (newVal) => {\n  console.log(\"gschedule_info\", newVal)\n})\nconst columns = [\n  {\n    title: \"序号\",\n    dataIndex: \"id\",\n    key: \"id\",\n  },\n  {\n    title: \"用户\",\n    dataIndex: \"username\",\n    key: \"username\",\n  },\n  {\n    title: \"预约时间\",\n    dataIndex: \"reserve_time\",\n    key: \"reserve_time\",\n  },\n  {\n    title: \"操作\",\n    dataIndex: \"action\",\n    key: \"action\",\n  },\n];\nconst users = ref([])\n\nconst delReser = async (id) => {\n  await Api.reservationController.destroy({id: id})\n  users.value.splice(users.value.indexOf(id), 1)\n}\n/*获取当前的预约用户*/\nconst showSigned = (gs) => {\n  console.log(gs.extendedProps.reservations)\n  users.value = gs.extendedProps.reservations\n  // console.log(\"users\", users.value)\n}\nconst gAppointForm = ref({\n  coach_id: null,\n  user_id: null,\n  username: null,\n  gschedule_ids: [],\n  way: \"backend\",\n})\n\nconst confirmSelect = () => {\n  console.log(gAppointForm.value.coach_id)\n  calRef.value.refresh()\n}\nconst onConfirm = async () => {\n  formRef.value.validate().then(async () => {\n    let gschedule_ids = gschedule_info.value.map(item => +item.id)\n    if (gschedule_ids.length == 0) {\n      return message.error(\"请选择预约课程\")\n    }\n    gAppointForm.value.gschedule_ids = gschedule_ids\n    await Api.reservationController.store(gAppointForm.value)\n    // 刷新一下左侧的表格数据\n    calRef.value.refresh()\n  })\n}\n</script>\n\n<style scoped lang=\"scss\">\n\n.appo-box {\n  width: 160px;\n  height: 160px;\n\n  .appo-header {\n    display: flex;\n    justify-content: space-between;\n\n    align-items: center;\n    font-weight: 600;\n    text-align: center;\n    color: white;\n    background-color: #804400;\n    font-size: 12px;\n    height: 40px;\n  }\n\n  .appo-content {\n    background-color: black;\n    opacity: 0.78;\n    text-align: center;\n    position: relative;\n    padding: 0 4px;\n    font-size: 20px;\n    height: 120px;\n    color: #804400;\n  }\n}\n</style>"],"names":["colorPalette","getRandomColor","formatTime","timeString","time","hours","minutes","useOpts","eventClickCallback","dateClickCallback","eventDidMountCallback","selEventCallback","eventAddCallback","eventChangeCallback","eventContentCallback","eventMouseEnterCallback","eventMouseLeaveCallback","eventDropCallback","coach_id","dayGridPlugin","interactionPlugin","timeGridPlugin","momentPlugin","listPlugin","zhLocale","fetchInfo","successCallback","failureCallback","req","Api","item","info","startTime","endTime","newColor","arg","createElement","color","containerEl","args","h","getCurrentInstance","fullCalendarRef","ref","props","__props","emit","__emit","tagArr","listenTag","row","index","heartbeatStyle","evClickCbk","eventEl","resultArr","dtClickCbk","mountedCbk","selCbk","event","evtAddCbk","evtCbk","evtContentCbk","evtMouseEnterCbk","evtMouseLeaveCbk","eventDropCbk","calendarOptions","watch","newVal","__expose","calendarApi","formRef","calRef","gschedule_info","columns","users","delReser","id","showSigned","gs","gAppointForm","confirmSelect","onConfirm","gschedule_ids","message"],"mappings":"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"}