{"version":3,"file":"order.62554e2a.1753605037589.js","sources":["../../src/composible/useCouponOrder.ts","../../src/pages/coupon/order.vue"],"sourcesContent":["import Api from \"@/api\"\nimport {destroy} from \"@/api/courseController\";\nimport {VxeGridProps} from \"vxe-table\";\nimport {request} from \"@/utils/request\";\nimport XEUtils from \"xe-utils\";\n\nclass RowVO {\n}\n\nexport default () => {\n    // 方法\n\n    // 表单配置\n    const serveApiUrl = import.meta.env.VITE_API_URL;\n    const gridOptions = reactive<VxeGridProps<RowVO>>({\n        border: \"full\",\n        size: \"small\",\n        showHeaderOverflow: true,\n        showOverflow: true,\n        keepSource: true,\n        autoResize: true,\n\n        expandConfig: {\n            trigger: \"row\",\n            showIcon: true,\n            expandRowKeys: [1, 2],\n            iconOpen: \"vxe-icon--caret-bottom\",\n            iconClose: \"vxe-icon--caret-top\",\n        },\n        formConfig: {\n            titleWidth: 120,\n            titleAlign: \"right\",\n            items: [\n\n                {\n                    field: \"out_trade_no\",\n                    title: \"单号\",\n                    span: 6,\n                    itemRender: {\n                        name: \"$input\",\n                        props: {placeholder: \"请输入单号\"},\n                    },\n                },\n                {\n                    field: \"status\",\n                    title: \"状态\",\n                    span: 6,\n                    itemRender: {\n                        name: \"$select\",\n                        props: {placeholder: \"请选择\"},\n                        options: [\n                            {value: \"success\", label: \"已支付\"},\n                            {value: \"fail\", label: \"待支付\"},\n                        ],\n                    },\n                },\n                {\n                    span: 8,\n                    align: \"left\",\n                    collapseNode: true,\n                    itemRender: {\n                        name: \"$buttons\",\n                        children: [\n                            {\n                                props: {\n                                    type: \"submit\",\n                                    content: \"搜索\",\n                                    status: \"primary\",\n                                },\n                            },\n                            {props: {type: \"reset\", content: \"重置\"}},\n                        ],\n                    },\n                },\n            ],\n        },\n        stripe: true,\n        id: \"full_edit_9999\",\n        rowConfig: {\n            keyField: \"#\",\n            isHover: true,\n            useKey: true,\n        },\n        columnConfig: {\n            resizable: true,\n        },\n        customConfig: {\n            storage: true,\n            checkMethod({column}) {\n                if ([\"name\", \"no\"].includes(column.field)) {\n                    return false;\n                }\n                return true;\n            },\n        },\n        printConfig: {\n            columns: [{field: \"name\"}],\n        },\n        sortConfig: {\n            trigger: \"cell\",\n            remote: true,\n        },\n        filterConfig: {\n            remote: true,\n        },\n        pagerConfig: {\n            enabled: true,\n            pageSize: 10,\n            pageSizes: [5, 10, 15, 20, 50, 100, 200, 500, 1000],\n        },\n\n        toolbarConfig: {\n            buttons: [\n                // {code: \"insert_edit\", name: \"新增\", status: \"primary\"},\n                // {code: \"delete\", name: \"删除\", status: \"danger\"},\n                // {code: \"save\", name: \"保存\", status: \"success\"}\n            ],\n            refresh: true, // 显示刷新按钮\n            import: false, // 显示导入按钮\n            export: true, // 显示导出按钮\n            print: true, // 显示打印按钮\n            zoom: true, // 显示全屏按钮\n            custom: true, // 显示自定义列按钮\n        },\n        proxyConfig: {\n            seq: true, // 启用动态序号代理，每一页的序号会根据当前页数变化\n            sort: true, // 启用排序代理，当点击排序时会自动触发 query 行为\n            filter: true, // 启用筛选代理，当点击筛选时会自动触发 query 行为\n            form: true, // 启用表单代理，当点击表单提交按钮时会自动触发 reload 行为\n            props: {\n                // 对应响应结果 Promise<{ result: [], page: { total: 100 } }>\n                result: \"data\", // 配置响应结果列表字段\n                total: \"total\", // 配置响应结果总页数字段\n            },\n            showResponseMsg: false,\n            // 只接收Promise，具体实现自由发挥\n            ajax: {\n                // 当点击工具栏查询按钮或者手动提交指令 query或reload 时会被触发\n                query: async ({page, sorts, filters, form}) => {\n                    //通过当前对象为选框添加选项\n                    const queryParams: any = Object.assign({}, form);\n                    // 处理排序条件\n                    const firstSort = sorts[0];\n                    if (firstSort) {\n                        queryParams.sort = firstSort.field;\n                        queryParams.order = firstSort.order;\n                    }\n                    // 处理筛选条件\n                    filters.forEach(({field, values}) => {\n                        queryParams[field] = values.join(\",\");\n                    });\n                    return request({\n                        url: `/api/admin/coupon_order?pageSize=${page.pageSize}&currentPage=${page.currentPage\n                        }&${XEUtils.serialize(queryParams)}`,\n                        method: \"GET\",\n                    });\n                },\n            },\n        },\n        columns: [\n            {field: \"id\", title: \"序号\", width: 100},\n            // 配置日期选择器\n            {\n                field: \"title\",\n                title: \"标题\",\n                sortable: true,\n            },\n\n            {\n                field: \"course_id\",\n                title: \"课程编号\",\n                sortable: true,\n            },{\n                field: \"remark\",\n                title: \"备注\",\n            },\n            {\n                field: \"out_trade_no\",\n                title: \"单号\",\n            },\n            {\n                field: \"transaction_id\",\n                title: \"transaction_id\",\n            },\n            {\n                field: \"user_id\",\n                title: \"用户ID\",\n            },\n            {\n                field: \"pay_type\",\n                title: \"方式\",\n            },\n            {\n                field: \"pay_amount\",\n                title: \"金额\",\n            },\n            {\n                field: \"pay_time\",\n                title: \"时间\",\n            },\n\n            {\n                field: \"operator_id\",\n                title: \"操作人\",\n            },\n\n            {\n                field: \"status\",\n                title: \"状态\",\n                slots: {\n                    default: \"status\",\n                },\n            },\n\n            {\n                field: \"created_at\",\n                title: \"创建时间\",\n            },\n        ],\n        importConfig: {},\n        exportConfig: {},\n        checkboxConfig: {\n            labelField: \"ID\",\n            checkStrictly: true,\n        },\n        editRules: {\n            name: [\n                {required: true, message: \"必填\"},\n                {min: 3, max: 50, message: \"名称长度在 3 到 50 个字符\"},\n            ],\n            no: [{required: true, message: \"必填\"}],\n        },\n        editConfig: {\n            trigger: \"click\",\n            mode: \"row\",\n            showStatus: true,\n            showUpdateStatus: true,\n            showInsertStatus: true,\n            autoClear: true,\n        },\n    });\n\n    return {\n        gridOptions,\n    };\n};\n","<script lang=\"ts\" setup>\r\nimport {ref} from 'vue'\r\nimport {message} from 'ant-design-vue'\r\nimport type {VxeGridListeners} from 'vxe-table'\r\nimport useCouponOrder from \"@/composible/useCouponOrder\";\r\n\r\nconst {gridOptions} = useCouponOrder()\r\nconst xGrid = ref()\r\n\r\n// 编辑用户\r\nconst editCourse = (row: any) => {\r\n  const grid = xGrid.value\r\n  grid.setEditRow(row)\r\n}\r\n\r\n// 退款\r\nconst refundCourse = async (row: any) => {\r\n  try {\r\n/*    await destroy({id: row.id})*/\r\n    xGrid.value.commitProxy('query')\r\n  } catch (error) {\r\n    message.error('删除失败')\r\n  }\r\n}\r\n\r\n\r\nconst gridEvent: VxeGridListeners = {\r\n  proxyQuery() {\r\n    /*设置选项*/\r\n    const column = xGrid.value.getColumnByField('course_type_id')\r\n  },\r\n}\r\n\r\n</script>\r\n\r\n<template>\r\n  <div class=\"demo-page-wrapper\">\r\n    <vxe-grid\r\n        ref=\"xGrid\"\r\n        v-bind=\"gridOptions\"\r\n        v-on=\"gridEvent\"\r\n    >\r\n      <template #status=\"{ row }\">\r\n        <div>\r\n          <a-tag :color=\"row.status==='success'?'green':'orange'\">{{row.status==='success'  ? '已支付' : '待支付'}}</a-tag>\r\n        </div>\r\n      </template>\r\n    </vxe-grid>\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"less\">\r\n.demo-page-wrapper {\r\n  padding: 20px;\r\n}\r\n</style>"],"names":["useCouponOrder","reactive","column","page","sorts","filters","form","queryParams","firstSort","field","values","request","XEUtils","gridOptions","xGrid","ref","gridEvent"],"mappings":"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"}