{"version":3,"file":"ProfileInfo.9e48f0e7.1755689448535.js","sources":["../../src/components/editable-cell/EditableCell.vue","../../src/pages/personal/ProfileInfo.vue"],"sourcesContent":["<script lang=\"ts\" setup>\n  import { computed, nextTick, PropType, ref, toRefs } from 'vue';\n\n  export type AntInputType =\n    | 'input'\n    | 'textarea'\n    | 'radio'\n    | 'timePicker'\n    | 'datePicker'\n    | 'rangePicker'\n    | 'select'\n    | 'mention'\n    | 'rate'\n    | 'upload'\n    | 'treeSelect'\n    | 'transfer'\n    | 'checkbox'\n    | 'cascader'\n    | 'autoComplete'\n    | 'inputNumber'\n    | 'slider'\n    | 'switch';\n\n  const emit = defineEmits<{\n    (e: 'update:edit', edit: boolean): void;\n    (e: 'update:value', value: any): void;\n    (e: 'pressEnter', event: KeyboardEvent): void;\n  }>();\n  const props = defineProps({\n    value: [String, Number, Boolean, Object],\n    edit: {\n      type: Boolean,\n      default: null,\n    },\n    editOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    type: {\n      type: String as PropType<AntInputType>,\n      default: 'input',\n      validator(val: string) {\n        return [\n          'input',\n          'radio',\n          'timePicker',\n          'datePicker',\n          'rangePicker',\n          'select',\n          'mention',\n          'rate',\n          'upload',\n          'treeSelect',\n          'transfer',\n          'checkbox',\n          'cascader',\n          'autoComplete',\n          'inputNumber',\n          'slider',\n          'switch',\n          'textarea',\n        ].includes(val);\n      },\n    },\n    options: Object,\n  });\n\n  const { type } = toRefs(props);\n\n  const component = computed(() => {\n    const _type = type.value;\n    return 'A' + _type.substring(0, 1).toUpperCase() + _type.substring(1);\n  });\n\n  const cacheEdit = ref(false);\n\n  const _edit = computed({\n    get() {\n      if (props.edit !== null) {\n        cacheEdit.value = props.edit;\n      }\n      return props.edit ?? cacheEdit.value;\n    },\n    set(val) {\n      cacheEdit.value = val;\n      emit('update:edit', val);\n    },\n  });\n\n  const input = ref();\n\n  function editCell() {\n    if (props.editOnClick) {\n      _edit.value = true;\n      nextTick(() => input.value?.focus());\n    }\n  }\n\n  function complete() {\n    _edit.value = false;\n  }\n\n  const cacheVal: any = ref(null);\n  const _value = computed({\n    get() {\n      if (props.value !== undefined) {\n        cacheVal.value = props.value;\n      }\n      return props.value ?? cacheVal.value;\n    },\n    set(val) {\n      cacheVal.value = val;\n      emit('update:value', val);\n    },\n  });\n</script>\n<template>\n  <slot v-if=\"_edit\" class=\"editable-cell-input\" name=\"input\">\n    <component\n      ref=\"input\"\n      @keyup.enter=\"complete\"\n      @blur=\"complete\"\n      v-model:value=\"_value\"\n      class=\"editable-cell-input-component\"\n      v-bind=\"options\"\n      :is=\"component\"\n    />\n  </slot>\n  <div v-else @click=\"editCell\" class=\"editable-cell-show\">\n    <slot>\n      {{ value }}\n    </slot>\n  </div>\n</template>\n<style lang=\"less\" scoped>\n  .editable-cell {\n    &-input {\n      &-component {\n      }\n    }\n  }\n</style>\n","<script lang=\"ts\" setup>\nimport EditableCell from '@/components/editable-cell';\nimport {\n  EditFilled,\n  FacebookOutlined,\n  InstagramOutlined,\n  TwitterOutlined,\n} from '@ant-design/icons-vue';\nimport { reactive, ref } from 'vue';\n\nconst profiles = reactive([\n  {\n    label: 'Full Name',\n    content: 'Li Zhi',\n  },\n  {\n    label: 'Mobile',\n    content: '13678988900',\n  },\n  {\n    label: 'Email',\n    content: 'lizhi@firfox.com',\n  },\n  {\n    label: 'Location',\n    content: 'shenzheng.CN',\n  },\n]);\n\nconst edit = ref(false)\n</script>\n<template>\n  <a-card title=\"Profile Information\" class=\"profile-info rounded-xl shadow-lg\" :bordered=\"false\">\n    <template #extra>\n      <EditFilled @click=\"edit = true\" class=\"text-subtext hover:text-primary cursor-pointer\" />\n    </template>\n    <div class=\"description\">\n      <EditableCell :options=\"{ rows: 4 }\" v-model:edit=\"edit\" type=\"textarea\" value=\"Hi, I’m Alec Thompson, Decisions: If you can’t decide, the answer is no.\n      If two equally difficult paths, choose the one more painful in the short\n      term (pain avoidance is creating an illusion of equality).\">\n      </EditableCell>\n    </div>\n    <a-divider />\n    <div class=\"text-title font-medium\">Oliver Liam</div>\n    <a-descriptions class=\"profile-list mt-3 font-medium\" :column=\"1\">\n      <a-descriptions-item :label=\"item.label\" v-for=\"item in profiles\">\n        {{ item.content }}\n      </a-descriptions-item>\n      <a-descriptions-item label=\"Contact\">\n        <TwitterOutlined class=\"text-blue-400\" />\n        <FacebookOutlined class=\"text-blue-800\" />\n        <InstagramOutlined class=\"text-red-500\" />\n      </a-descriptions-item>\n    </a-descriptions>\n  </a-card>\n</template>\n<style lang=\"less\" scoped>\n.profile-info {\n  :deep(.ant-card) {\n    &-head {\n      @apply border-none;\n\n      &-title {\n        @apply font-semibold;\n      }\n    }\n\n    &-body {\n      @apply pt-1;\n    }\n  }\n\n  :deep(.ant-descriptions) {\n    &-row:last-child>td {\n      padding-bottom: 0;\n    }\n\n    &-item {\n      &-content {\n        @apply items-center;\n\n        .anticon {\n          @apply text-base;\n\n          &:not(:first-child) {\n            @apply ml-2;\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n"],"names":["emit","__emit","props","__props","type","toRefs","component","computed","_type","cacheEdit","ref","_edit","val","input","editCell","nextTick","_a","complete","cacheVal","_value","profiles","reactive","edit"],"mappings":"urGAuBE,MAAAA,EAAAC,EAKAC,EAAAC,EAuCA,CAAA,KAAAC,CAAA,EAAAC,EAAAH,CAAA,EAEAI,EAAAC,EAAA,IAAA,CACE,MAAAC,EAAAJ,EAAA,MACA,MAAA,IAAAI,EAAA,UAAA,EAAA,CAAA,EAAA,cAAAA,EAAA,UAAA,CAAA,CAAoE,CAAA,EAGtEC,EAAAC,EAAA,EAAA,EAEAC,EAAAJ,EAAA,CAAuB,KAAA,CAEnB,OAAAL,EAAA,OAAA,OACEO,EAAA,MAAAP,EAAA,MAEFA,EAAA,MAAAO,EAAA,KAA+B,EACjC,IAAAG,EAAA,CAEEH,EAAA,MAAAG,EACAZ,EAAA,cAAAY,CAAA,CAAuB,CACzB,CAAA,EAGFC,EAAAH,IAEA,SAAAI,GAAA,CACEZ,EAAA,cACES,EAAA,MAAA,GACAI,EAAA,IAAA,OAAA,OAAAC,EAAAH,EAAA,QAAA,YAAAG,EAAA,QAAA,EACF,CAGF,SAAAC,GAAA,CACEN,EAAA,MAAA,EAAc,CAGhB,MAAAO,EAAAR,EAAA,IAAA,EACAS,EAAAZ,EAAA,CAAwB,KAAA,CAEpB,OAAAL,EAAA,QAAA,SACEgB,EAAA,MAAAhB,EAAA,OAEFA,EAAA,OAAAgB,EAAA,KAA+B,EACjC,IAAAN,EAAA,CAEEM,EAAA,MAAAN,EACAZ,EAAA,eAAAY,CAAA,CAAwB,CAC1B,CAAA,+fCvGJ,MAAAQ,EAAAC,EAAA,CAA0B,CACxB,MAAA,YACS,QAAA,QACE,EACX,CACA,MAAA,SACS,QAAA,aACE,EACX,CACA,MAAA,QACS,QAAA,kBACE,EACX,CACA,MAAA,WACS,QAAA,cACE,CACX,CAAA,EAGFC,EAAAZ,EAAA,EAAA;;"}