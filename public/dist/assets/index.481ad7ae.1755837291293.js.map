{"version":3,"file":"index.481ad7ae.1755837291293.js","sources":["../../src/components/list/GridList.vue","../../src/components/selector/IconSelector.vue","../../src/pages/system/auth/menu/index.vue"],"sourcesContent":["<script lang=\"ts\" setup>\n  import { ref, PropType, computed } from 'vue';\n  import { PaginationProps } from 'ant-design-vue';\n\n  const props = defineProps({\n    pagination: { type: [Object, Boolean] as PropType<PaginationProps> },\n    column: { type: Number, default: 8 },\n    gap: [Array<Number>, Number],\n    dataSource: { type: Array<any>, default: [] },\n  });\n\n  const _pagination = computed<PaginationProps>(() => {\n    if (props.pagination && typeof props.pagination === 'boolean') {\n      return {};\n    }\n    return props.pagination ?? {};\n  });\n\n  const list = computed(() => {\n    if (typeof props.pagination === 'boolean' && !props.pagination) {\n      return props.dataSource?.slice(0);\n    }\n    const { current = 1, pageSize = 10 } = _pagination.value;\n    let start = 0;\n    let end = pageSize;\n    if (props.dataSource.length > pageSize) {\n      start = (current - 1) * pageSize;\n      end = current * pageSize;\n    }\n    return props.dataSource?.slice(start, end);\n  });\n\n  const col = computed(() => (list.value.length > 0 ? props.column : 1));\n</script>\n<template>\n  <div\n    v-bind=\"$attrs\"\n    class=\"grid-list grid\"\n    :style=\"`${column ? 'grid-template-columns:repeat(' + col + ', minmax(0, 1fr))' : ''}`\"\n  >\n    <template v-if=\"list.length > 0\" v-for=\"item in list\">\n      <slot name=\"renderItem\" :item=\"item\">\n        {{ item }}\n      </slot>\n    </template>\n    <template v-else>\n      <a-empty />\n    </template>\n  </div>\n  <a-pagination\n    class=\"mt-3\"\n    v-if=\"pagination\"\n    v-bind=\"{ total: dataSource?.length, ...(pagination as PaginationProps) }\"\n  />\n</template>\n<style lang=\"less\" scoped>\n  .grid-list {\n  }\n</style>\n","<script lang=\"ts\" setup>\n  import { ref, computed, Ref } from 'vue';\n  import type { Component, PropType } from 'vue';\n  import GridList from '../list/GridList.vue';\n  import { PaginationProps } from 'ant-design-vue';\n  import { debounce } from 'lodash';\n  import useModelValue from '@/utils/useModelValue';\n\n  export interface IconSelectOption {\n    label?: string;\n    component: string | Component;\n    value: string | number;\n  }\n\n  export interface IconSelectGroup {\n    title: string;\n    key: string | number;\n    list: IconSelectOption[];\n  }\n\n  type SelectMode = 'multiple' | 'single';\n\n  const props = defineProps({\n    mode: {\n      type: String as PropType<SelectMode>,\n      default: 'multiple',\n    },\n    value: {\n      type: [Array<string | number>, String, Number],\n      default(rawProps: any) {\n        if (rawProps.mode === 'multiple' || !rawProps.mode) {\n          return undefined;\n        } else {\n          return undefined;\n        }\n      },\n    },\n    column: {\n      type: Number,\n      default: 8,\n    },\n    placeholder: {\n      type: String,\n      default: '选择图标，输入文字搜索...',\n    },\n    options: {\n      type: [Array<IconSelectOption>, Array<IconSelectGroup>],\n      default: [],\n    },\n  });\n\n  const emit = defineEmits<{\n    (e: 'update:value', args: (string | number)[] | undefined | string | number): void;\n  }>();\n\n  // 分页\n  const pageBase: PaginationProps = {\n    pageSize: props.column * 5,\n    hideOnSinglePage: true,\n    showSizeChanger: false,\n    size: 'small',\n  };\n\n  const visible = ref(false);\n\n  const isMultiple = computed(() => props.mode === 'multiple');\n\n  /**\n   * 格式化分组\n   */\n  const groupList = computed<(IconSelectGroup & { _searchList: IconSelectOption[]; _current: Ref<number> })[]>(() => {\n    if (props.options.length === 0 || (props.options as IconSelectGroup[])[0].title !== undefined) {\n      return (props.options as IconSelectGroup[]).map((group) => ({\n        ...group,\n        _current: ref(1),\n        _searchList: group.list,\n      }));\n    }\n    return [\n      {\n        title: '全部图标',\n        key: '__dft',\n        list: props.options as IconSelectOption[],\n        _current: ref(1),\n        _searchList: [...props.options] as IconSelectOption[],\n      },\n    ];\n  });\n\n  /**\n   * icon 字典 (方便搜索和查找)\n   */\n  const iconMap = computed(() => {\n    const map = new Map<string | number, IconSelectOption>();\n    groupList.value\n      .flatMap((group) => group.list)\n      .forEach((item) => {\n        map.set(item.value, item);\n      });\n    return map;\n  });\n\n  const { value: select } = useModelValue(\n    () =>\n      Array.isArray(props.value) || props.value === undefined ? (props.value as Array<string | number>) : [props.value],\n    (val) => emit('update:value', isMultiple.value ? val : val?.[0])\n  );\n\n  /**\n   * 选中图标\n   * @param icon\n   */\n  function onSelect(icon: IconSelectOption) {\n    const index = select.value?.indexOf(icon.value) ?? -1;\n    if (index === -1) {\n      select.value = isMultiple.value ? [...(select.value ?? []), icon.value] : [icon.value];\n    } else if (isMultiple.value) {\n      remove(icon.value);\n    }\n    if (!isMultiple.value) {\n      visible.value = false;\n    }\n    searchValue.value = '';\n    searchIcon('');\n  }\n\n  /**\n   * 移除选中\n   * @param icon\n   */\n  function remove(iconKey: string | number) {\n    const index = select.value?.findIndex((icon) => icon === iconKey) ?? -1;\n    if (index >= 0) {\n      select.value = select.value?.filter((icon) => icon !== iconKey);\n    }\n  }\n\n  /**\n   * 搜索图标\n   * @param keyword\n   */\n  function searchIcon(keyword: string) {\n    const empty = keyword === '';\n\n    const group = groupList.value.find((item) => item.key === active.value)!;\n\n    const reg = new RegExp(keyword.toLowerCase());\n\n    const filterIcon = (reg: RegExp, list: IconSelectOption[]) => {\n      return list.filter((icon) => reg.test(icon.label!.toLocaleLowerCase()));\n    };\n\n    group._searchList = empty ? [...group.list] : filterIcon(reg, group.list);\n\n    setTimeout(() => {\n      groupList.value\n        .filter((item) => item !== group)\n        .forEach((g) => {\n          g._searchList = empty ? [...g.list] : filterIcon(reg, g.list);\n        });\n    });\n\n    loading.value = false;\n  }\n\n  /**\n   * 搜索防抖\n   */\n  const _search = debounce(searchIcon, 300);\n\n  /**\n   * 搜索监听\n   * @param value\n   */\n  function onSearch(value: string) {\n    searchValue.value = value;\n    loading.value = true;\n    _search(value);\n  }\n\n  // 当前激活分组\n  const active = ref(groupList.value[0]?.key);\n\n  // 搜索关键字\n  const searchValue = ref('');\n\n  const loading = ref(false);\n\n  function selected(icon: IconSelectOption) {\n    return select.value?.includes(icon.value);\n  }\n</script>\n<template>\n  <a-select\n    @click=\"() => (visible = true)\"\n    :showSearch=\"true\"\n    mode=\"multiple\"\n    v-model:value=\"select\"\n    :open=\"visible\"\n    @blur=\"() => (visible = false)\"\n    @search=\"onSearch\"\n    :searchValue=\"searchValue\"\n    v-bind=\"{ placeholder }\"\n    allow-clear\n  >\n    <template #dropdownRender>\n      <a-spin tip=\"搜索中...\" :spinning=\"loading\">\n        <a-tabs\n          v-model:activeKey=\"active\"\n          :class=\"[\n            'icon-selector',\n            'px-base',\n            'pb-base',\n            { 'no-group pt-[12px]': groupList.length === 1 && groupList[0].key === '__dft' },\n          ]\"\n          @mousedown.prevent\n        >\n          <a-tab-pane :key=\"group.key\" v-for=\"group in groupList\">\n            <template #tab>\n              <a-badge\n                :class=\"{ 'text-primary-500': active === group.key }\"\n                :count=\"group._searchList.length === group.list.length ? undefined : group._searchList.length\"\n                showZero\n              >\n                {{ group.title }}\n              </a-badge>\n            </template>\n            <GridList\n              class=\"icon-container\"\n              :dataSource=\"group._searchList\"\n              :column=\"column\"\n              :pagination=\"{\n                ...pageBase,\n                current: group._current.value,\n                'onUpdate:current': (val) => (group._current.value = val),\n              }\"\n            >\n              <template #renderItem=\"{ item }\">\n                <div\n                  @click=\"onSelect(item)\"\n                  :class=\"`icon-item bg-container cursor-pointer h-10 w-10 flex justify-center items-center ${\n                    selected(item) ? 'bg-primary-100' : ''\n                  }`\"\n                >\n                  <component class=\"icon transition\" :is=\"item.component\" />\n                </div>\n              </template>\n            </GridList>\n          </a-tab-pane>\n        </a-tabs>\n      </a-spin>\n    </template>\n    <template #tagRender=\"item\">\n      <div class=\"mx-0.5 bg-bg-disabled p-1 rounded-sm flex items-center cursor-pointer\">\n        <component :is=\"iconMap.get(item.value)?.component\" />\n        <CloseOutlined\n          v-if=\"isMultiple\"\n          class=\"text-subtext text-[10px] ml-1 hover:text-text\"\n          @click=\"remove(item.value)\"\n        />\n      </div>\n    </template>\n  </a-select>\n</template>\n<style lang=\"less\" scoped>\n  .icon-selector {\n    :deep(.icon-container) {\n      @apply p-2 text-xl grid gap-2 bg-layout rounded;\n\n      .icon-item {\n        @apply rounded-sm border border-solid border-transparent;\n\n        &:hover {\n          @apply border-primary-500;\n\n          .icon {\n            @apply scale-125;\n          }\n        }\n      }\n    }\n\n    &.no-group {\n      :deep(.ant-tabs-nav) {\n        @apply hidden;\n      }\n    }\n  }\n</style>\n","<script lang=\"ts\" setup>\nimport IconSelector, {IconSelectGroup, IconSelectOption} from '@/components/selector/IconSelector.vue';\n// @ts-ignore\nimport * as icons from '@ant-design/icons-vue/es/icons';\nimport {computed, onMounted, reactive, ref, watch} from 'vue';\nimport {FormInstance, TreeSelectProps} from 'ant-design-vue';\nimport {MenuProps, useMenuStore} from '@/store/menu';\nimport {storeToRefs} from 'pinia';\nimport {useAuthStore} from '@/plugins';\nimport Api from '@/api'\n\nconst {useAuth} = useAuthStore();\n\nconst iconList: IconSelectOption[] = [];\n\nconst outlined: IconSelectGroup = {\n  title: '线框风',\n  key: 'outlined',\n  list: [],\n};\nconst filled: IconSelectGroup = {\n  title: '实底风',\n  key: 'filled',\n  list: [],\n};\nconst twoTone: IconSelectGroup = {\n  title: '双色风',\n  key: 'twoTone',\n  list: [],\n};\n\nconst groupList: IconSelectGroup[] = [outlined, filled, twoTone];\n\nfor (const key in icons) {\n  const icon = {\n    label: key,\n    value: key,\n    component: icons[key],\n  };\n\n  iconList.push(icon);\n  if (key.endsWith('Outlined')) {\n    outlined.list.push(icon);\n  } else if (key.endsWith('Filled')) {\n    filled.list.push(icon);\n  } else if (key.endsWith('TwoTone')) {\n    twoTone.list.push(icon);\n  }\n}\n\niconList.splice(100);\n\nconst columns = [\n  {\n    title: '菜单名称',\n    dataIndex: 'title',\n  },\n  {\n    title: 'name',\n    dataIndex: 'name',\n  },\n  {\n    title: '图标',\n    dataIndex: 'icon',\n  },\n  {\n    title: 'path',\n    dataIndex: 'path',\n  },\n  {\n    title: '页面组件',\n    dataIndex: 'component',\n  },\n  {\n    title: '权限',\n    dataIndex: 'permission',\n  },\n  {\n    title: '渲染菜单',\n    dataIndex: 'renderMenu',\n    customRender: (val: boolean) => (val.record.renderMenu ? '是' : '否'),\n  },\n  {\n    width: 140,\n    title: '操作',\n    align: 'center',\n    dataIndex: 'operation',\n  },\n];\n\nconst treeData = computed(() => {\n  const toNode = (list: MenuProps[]): TreeSelectProps['treeData'] => {\n    return list.map((item) => ({\n      title: item.title!,\n      value: item.id! as number,\n      children: item.children && toNode(item.children!),\n    }));\n  };\n\n  return toNode(menuList.value);\n});\n\nconst showForm = ref(false);\n\nconst formData = reactive<MenuProps>({\n  id: undefined,\n  pid: undefined,\n  menu_type: 'page',\n  name: '',\n  title: undefined,\n  icon: undefined,\n  badge: undefined,\n  target: '_self',\n  path: '',\n  component: '',\n  renderMenu: true,\n  permission: undefined,\n  cacheable: true,\n});\n\nconst editPath = false;\nconst pathInput = ref();\n\nwatch(\n    () => formData.pid,\n    (val) => {\n      if (!val) {\n        return;\n      }\n      const findMenu = (name: string, list: MenuProps[]): MenuProps | undefined => {\n        for (const menu of list) {\n          if (menu.name === name) {\n            return menu;\n          } else if (menu.children) {\n            const _menu = findMenu(name, menu.children);\n            if (_menu) {\n              return _menu;\n            }\n          }\n        }\n      };\n      if (editPath === false) {\n        const _menu = findMenu(val, menuList.value);\n        formData.path = _menu!.path + '/' + (formData.name || '');\n        pathInput.value?.focus();\n      }\n    }\n);\n\nconst form = ref<FormInstance>();\n\nconst loading = ref(false);\n\nfunction submit() {\n  loading.value = true;\n  form.value\n      ?.validate()\n      .then(() => {\n        formData.id ? Api.menuController.update({id:formData.id},formData) : Api.menuController.store(formData);\n        showForm.value = false;\n      })\n      .finally(() => {\n        loading.value = false;\n      });\n}\n\nconst title = ref('新增菜单');\n\nconst pageType = ref('component');\nconst pageTypeConfig = {\n  component: {\n    props: 'component',\n    placeholder: '请输入需要渲染的页面组件',\n  },\n  iframe: {\n    props: 'link',\n    placeholder: '请输入链接地址',\n  },\n  link: {\n    props: 'link',\n    placeholder: '请输入链接地址',\n  },\n};\n\nwatch(pageType, (val) => {\n  if (val === 'component') {\n    formData.component = undefined;\n    formData.target = '_self';\n    formData.link = undefined;\n    form.value.clearValidate(['link']);\n  } else if (val === 'link') {\n    formData.component = 'link';\n    formData.target = '_blank';\n    form.value.clearValidate(['component']);\n  } else if (val === 'iframe') {\n    formData.component = 'iframe';\n    formData.target = '_self';\n    form.value.clearValidate(['component']);\n  }\n});\n\nconst edit = useAuth('system:auth:menu', function (record: MenuProps) {\n  form.value?.resetFields();\n  formData.id = record.id;\n  formData.name = record.name;\n  formData.title = record.title;\n  formData.path = record.path;\n  formData.component = record.component;\n  formData.icon = record.icon;\n  formData.badge = record.badge;\n  formData.link = record.link;\n  formData.target = record.target;\n  formData.renderMenu = record.renderMenu;\n  formData.permission = record.permission;\n  formData.pid = record.pid;\n  pageType.value =\n      formData.component === 'LinkView' ? 'link' : formData.component === 'iframe' ? 'iframe' : 'component';\n  showForm.value = true;\n  title.value = '编辑菜单';\n});\n\nfunction add() {\n  form.value?.resetFields();\n  formData.id = undefined;\n  formData.name = '';\n  formData.title = undefined;\n  formData.path = '';\n  formData.component = '';\n  formData.icon = undefined;\n  formData.renderMenu = false;\n  formData.permission = undefined;\n  showForm.value = true;\n  title.value = '新增菜单';\n}\n\nconst rules = {\n  component: [\n    {\n      async validator(_rule, value) {\n        console.log(_rule, value, '--validator');\n      },\n      trigger: 'change',\n    },\n  ],\n};\n\nconst remove = useAuth('delete', function (record: MenuProps) {\n  Api.menuController.destroy({id:record.id!});\n  // deleteMenu(record.id!);\n});\n\nconst menuStore = useMenuStore();\n\nconst handleMenuType = (val: string) => {\n  console.log(val, '--handleMenuType')\n}\n\nlet menuList=ref([])\nonMounted(async () => {\n  menuList.value = await Api.menuController.list()\n});\n</script>\n<template>\n  <div class=\"authority\">\n    <a-table\n        rowKey=\"id\"\n        :columns=\"columns\"\n        :dataSource=\"menuList\"\n        :pagination=\"{ pageSize: 20, current: 1, total: 10 }\"\n    >\n      <template #title>\n        <div class=\"flex justify-between\">\n          菜单列表\n          <div class=\"flex\">\n            <a-button type=\"primary\" @click=\"add\">\n              <template #icon>\n                <PlusOutlined/>\n              </template>\n              新增\n            </a-button>\n          </div>\n        </div>\n      </template>\n      <template #bodyCell=\"{ text, record, index, column }\">\n        <template v-if=\"column.dataIndex === 'operation'\">\n          <a-button class=\"text-xs\" type=\"primary\" size=\"small\" @click=\"edit(record)\">编辑</a-button>\n          <a-popconfirm title=\"确认删除？\" @confirm=\"remove(record)\">\n            <a-button class=\"text-xs ml-base\" v-auth:delete danger size=\"small\">删除</a-button>\n          </a-popconfirm>\n        </template>\n        <template v-else-if=\"column.dataIndex === 'icon'\">\n          <component :is=\"record.icon\"/>\n        </template>\n      </template>\n    </a-table>\n    <a-modal :okButtonProps=\"{ loading }\" width=\"540px\" v-model:visible=\"showForm\" :title=\"title\" @ok=\"submit\">\n      <a-form ref=\"form\" :model=\"formData\" :labelCol=\"{ span: 5 }\" :wrapperCol=\"{ span: 16, offset: 1 }\">\n        <a-form-item required name=\"name\" label=\"name\">\n          <a-input v-model:value=\"formData.name\"/>\n        </a-form-item>\n        <a-form-item required name=\"path\" label=\"path\">\n          <a-input ref=\"pathInput\" v-model:value=\"formData.path\"/>\n        </a-form-item>\n        <a-form-item required name=\"title\" label=\"菜单标题\">\n          <a-input v-model:value=\"formData.title\"/>\n        </a-form-item>\n        <a-form-item name=\"pid\" label=\"父级菜单\">\n          <a-tree-select\n              tree-default-expand-all\n              placeholder=\"设置父级菜单\"\n              v-model:value=\"formData.pid\"\n              :treeData=\"treeData\"\n          />\n        </a-form-item>\n        <a-form-item name=\"icon\" label=\"菜单图标\">\n          <IconSelector :column=\"6\" :options=\"groupList\" mode=\"single\" v-model:value=\"formData.icon\"/>\n        </a-form-item>\n        <a-form-item name=\"menu_type\" label=\"菜单类型\">\n          <a-radio-group v-model:value=\"formData.menu_type\" @change=\"handleMenuType\">\n            <a-radio-button value=\"menu\">菜单</a-radio-button>\n            <a-radio-button value=\"page\">页面</a-radio-button>\n            <a-radio-button value=\"button\">按钮</a-radio-button>\n          </a-radio-group>\n        </a-form-item>\n        <a-form-item required :name=\"pageTypeConfig[pageType].props\" :wrapperCol=\"{ span: 21, offset: 1 }\">\n          <!-- <a-input v-model:value=\"formData.component\" /> -->\n          <a-input-group compact>\n            <a-form-item-rest>\n              <a-select v-model:value=\"pageType\" style=\"width: 106px\">\n                <a-select-option value=\"component\">页面组件</a-select-option>\n                <a-select-option value=\"iframe\">iframe</a-select-option>\n                <a-select-option value=\"link\">外链</a-select-option>\n              </a-select>\n            </a-form-item-rest>\n            <a-input\n                v-model:value=\"formData[pageTypeConfig[pageType].props]\"\n                :placeholder=\"pageTypeConfig[pageType].placeholder?pageTypeConfig[pageType].placeholder:'@/components/layout/BlankView.vue'\"\n                style=\"width: calc(100% - 120px)\"\n            />\n          </a-input-group>\n        </a-form-item>\n        <a-form-item name=\"badge\" label=\"菜单徽标\">\n          <a-input v-model:value=\"formData.badge\"/>\n        </a-form-item>\n        <a-form-item name=\"permission\" label=\"权限校验\">\n          <a-input v-model:value=\"formData.permission\"/>\n        </a-form-item>\n        <a-form-item required name=\"target\" label=\"打开窗口\">\n          <a-radio-group :disabled=\"pageType === 'link' || pageType === 'iframe'\" v-model:value=\"formData.target\">\n            <a-radio value=\"_self\">当前窗口</a-radio>\n            <a-radio value=\"_blank\">新窗口</a-radio>\n          </a-radio-group>\n        </a-form-item>\n        <a-form-item required name=\"renderMenu\" label=\"渲染菜单\">\n          <a-switch v-model:checked=\"formData.renderMenu\" checked-children=\"是\" un-checked-children=\"否\"/>\n        </a-form-item>\n      </a-form>\n    </a-modal>\n  </div>\n</template>\n"],"names":["props","__props","_pagination","computed","list","_a","current","pageSize","start","end","_b","col","emit","__emit","pageBase","visible","ref","isMultiple","groupList","group","iconMap","map","item","select","useModelValue","val","onSelect","icon","remove","searchValue","searchIcon","iconKey","keyword","empty","active","reg","filterIcon","reg2","g","loading","_search","debounce","onSearch","value","selected","useAuth","useAuthStore","outlined","filled","twoTone","key","icons","columns","treeData","toNode","menuList","showForm","formData","reactive","pathInput","watch","findMenu","name","menu","_menu","form","submit","Api","title","pageType","pageTypeConfig","edit","record","add","useMenuStore","handleMenuType","onMounted"],"mappings":"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"}