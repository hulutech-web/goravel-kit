{"version":3,"file":"list.58fb967a.1753605037589.js","sources":["../../src/composible/useEvent.ts","../../src/pages/event/list.vue"],"sourcesContent":["import Api from \"@/api\"\nimport {VxeGridProps} from \"vxe-table\";\nimport {request} from \"@/utils/request\";\nimport XEUtils from \"xe-utils\";\n\nclass RowVO {\n}\n\nexport default () => {\n    // 方法\n    let typeList = ref<Array<{ value: any, label: string }>>([])\n    const fillOptions = async () => {\n        typeList.value = await Api.sportTypeController.option()\n        let row1 = gridOptions.columns.find(item => item.field === \"sport_type_id\")\n        row1.editRender.options = typeList.value\n    }\n    // 表单配置\n    const serveApiUrl = import.meta.env.VITE_API_URL;\n    const gridOptions = reactive<VxeGridProps<RowVO>>({\n        border: \"full\",\n        size: \"small\",\n        showHeaderOverflow: true,\n        showOverflow: true,\n        keepSource: true,\n        autoResize: true,\n        cellConfig: {\n            height: 100,\n        },\n        expandConfig: {\n            trigger: \"row\",\n            showIcon: true,\n            expandRowKeys: [1, 2],\n            iconOpen: \"vxe-icon--caret-bottom\",\n            iconClose: \"vxe-icon--caret-top\",\n        },\n        formConfig: {\n            titleWidth: 120,\n            titleAlign: \"right\",\n            items: [\n                {\n                    field: \"title\",\n                    title: \"赛事标题\",\n                    span: 6,\n                    itemRender: {\n                        name: \"$input\",\n                        props: {placeholder: \"请输入赛事标题\"},\n                    },\n                },\n                {\n                    field: \"event_type\",\n                    title: \"赛事类型\",\n                    span: 6,\n                    itemRender: {\n                        name: \"$select\",\n                        props: {placeholder: \"请选择赛事\"},\n                        options: [\n                            {\n                                value: \"outdoor\",\n                                label: \"户外赛\",\n                            },\n                            {\n                                value: \"professional\",\n                                label: \"专业赛\",\n                            }\n                        ]\n                    },\n                },\n\n                {\n                    field: \"start_time\",\n                    title: \"开始时间\",\n                    span: 6,\n                    itemRender: {\n                        name: \"VxeDatePicker\",\n                        props: {placeholder: \"请输入开始时间\"},\n                    },\n                },\n                {\n                    field: \"max_participants\",\n                    title: \"最大人数\",\n                    span: 6,\n                    itemRender: {\n                        name: \"$input\",\n                        props: {placeholder: \"请输入最大人数\"},\n                    },\n                },\n                {\n                    span: 6,\n                    align: \"left\",\n                    collapseNode: true,\n                    itemRender: {\n                        name: \"$buttons\",\n                        children: [\n                            {\n                                props: {\n                                    type: \"submit\",\n                                    content: \"搜索\",\n                                    status: \"primary\",\n                                },\n                            },\n                            {props: {type: \"reset\", content: \"重置\"}},\n                        ],\n                    },\n                },\n            ],\n        },\n        stripe: true,\n        id: \"full_edit_9999\",\n        rowConfig: {\n            keyField: \"#\",\n            isHover: true,\n            useKey: true,\n        },\n        columnConfig: {\n            resizable: true,\n        },\n        customConfig: {\n            storage: true,\n            checkMethod({column}) {\n                if ([\"name\", \"no\"].includes(column.field)) {\n                    return false;\n                }\n                return true;\n            },\n        },\n        printConfig: {\n            columns: [{field: \"name\"}],\n        },\n        sortConfig: {\n            trigger: \"cell\",\n            remote: true,\n        },\n        filterConfig: {\n            remote: true,\n        },\n        pagerConfig: {\n            enabled: true,\n            pageSize: 10,\n            pageSizes: [5, 10, 15, 20, 50, 100, 200, 500, 1000],\n        },\n\n        toolbarConfig: {\n            buttons: [\n                // {code: \"insert_edit\", name: \"新增\", status: \"primary\"},\n                // {code: \"delete\", name: \"删除\", status: \"danger\"},\n                {code: \"save\", name: \"保存\", status: \"success\"}\n            ],\n            refresh: true, // 显示刷新按钮\n            import: false, // 显示导入按钮\n            export: true, // 显示导出按钮\n            print: true, // 显示打印按钮\n            zoom: true, // 显示全屏按钮\n            custom: true, // 显示自定义列按钮\n        },\n        proxyConfig: {\n            seq: true, // 启用动态序号代理，每一页的序号会根据当前页数变化\n            sort: true, // 启用排序代理，当点击排序时会自动触发 query 行为\n            filter: true, // 启用筛选代理，当点击筛选时会自动触发 query 行为\n            form: true, // 启用表单代理，当点击表单提交按钮时会自动触发 reload 行为\n            props: {\n                // 对应响应结果 Promise<{ result: [], page: { total: 100 } }>\n                result: \"data\", // 配置响应结果列表字段\n                total: \"total\", // 配置响应结果总页数字段\n            },\n            showResponseMsg: false,\n            // 只接收Promise，具体实现自由发挥\n            ajax: {\n                // 当点击工具栏查询按钮或者手动提交指令 query或reload 时会被触发\n                query: async ({page, sorts, filters, form}) => {\n                    await fillOptions();\n                    //通过当前对象为选框添加选项\n                    const queryParams: any = Object.assign({}, form);\n                    // 处理排序条件\n                    const firstSort = sorts[0];\n                    if (firstSort) {\n                        queryParams.sort = firstSort.field;\n                        queryParams.order = firstSort.order;\n                    }\n                    // 处理筛选条件\n                    filters.forEach(({field, values}) => {\n                        queryParams[field] = values.join(\",\");\n                    });\n                    return request({\n                        url: `/api/admin/event?pageSize=${page.pageSize}&currentPage=${page.currentPage\n                        }&${XEUtils.serialize(queryParams)}`,\n                        method: \"GET\",\n                    });\n                },\n                save: ({body}) => {\n                    const {insertRecords, updateRecords} = body\n                    const promises = []\n\n                    if (insertRecords.length > 0) {\n                        insertRecords.forEach(record => {\n                            promises.push(Api.eventController.store(record))\n                        })\n                    }\n\n                    if (updateRecords.length > 0) {\n                        updateRecords.forEach(record => {\n                            promises.push(Api.eventController.update({id: record.id}, record))\n                        })\n                    }\n\n                    return Promise.all(promises)\n                }\n            },\n        },\n        columns: [\n            {field: \"id\", title: \"序号\", width: 100},\n            // 配置日期选择器\n            {\n                field: \"cover_image\",\n                title: \"封面\",\n                slots: {default: 'cover_image'}\n            },\n            {\n                field: \"title\",\n                title: \"标题\",\n                sortable: true,\n            },\n            {\n                field: \"code\",\n                title: \"编码\",\n                sortable: true,\n            },\n            {\n\n                field: \"red_hand\",\n                title: \"红方\",\n                width: 80,\n                editRender: {\n                    name: 'VxeInput',\n                },\n            },\n            {\n                field: \"blue_hand\",\n                title: \"蓝方\",\n                editRender: {\n                    name: 'VxeInput',\n                },\n                width: 80,\n            },\n            {\n                field: \"description\",\n                title: \"描述\",\n            },\n            {\n                field: \"event_type\",\n                title: \"类型\",\n                slots: {\n                    default: \"event_type\",\n                },\n            },\n            {\n                field: \"sport_type_id\",\n                title: \"运动类型\",\n                sortable: true,\n                editRender: {\n                    name: 'ASelect',\n                    options: typeList.value\n                },\n            },\n            {\n                field: \"format\",\n                title: \"对阵\",\n            },\n            {\n                field: \"max_participants\",\n                title: \"最大参与人数\",\n            },\n            {\n                field: \"min_participants\",\n                title: \"最小参与人数\",\n            },\n            {\n                field: \"start_time\",\n                title: \"开始时间\",\n                editRender: {\n                    name: 'VxeDatePicker',\n                },\n            },\n            {\n                field: \"end_time\",\n                title: \"结束时间\",\n                editRender: {\n                    name: 'VxeDatePicker',\n                },\n            },\n            {\n                field: \"registration_deadline\",\n                title: \"截止报名\",\n                editRender: {\n                    name: 'VxeDatePicker',\n                },\n            },\n            {\n                field: \"status\",\n                title: \"状态\",\n                /*draft:草稿；published：发布；registration：报名中in_progress：进行中；completed：完赛；cancelled：取消*/\n                formatter: ({cellValue}) => {\n                    switch (cellValue) {\n                        case \"draft\":\n                            return \"草稿\";\n                        case \"published\":\n                            return \"发布\";\n                        case \"registration\":\n                            return \"报名中\";\n                        case \"in_progress\":\n                            return \"进行中\";\n                        case \"completed\":\n                            return \"完赛\";\n                        case \"cancelled\":\n                            return \"取消\";\n                    }\n                }\n            },\n\n            {\n                field: \"created_at\",\n                title: \"创建时间\",\n            },\n            {\n                field: \"action\",\n                title: \"操作\",\n                width: 200,\n                slots: {\n                    default: \"action\",\n                },\n            },\n        ],\n        importConfig: {},\n        exportConfig: {},\n        checkboxConfig: {\n            labelField: \"ID\",\n            checkStrictly: true,\n        },\n        editRules: {\n            name: [\n                {required: true, message: \"必填\"},\n                {min: 3, max: 50, message: \"名称长度在 3 到 50 个字符\"},\n            ],\n            no: [{required: true, message: \"必填\"}],\n        },\n        editConfig: {\n            trigger: \"click\",\n            mode: \"row\",\n            showStatus: true,\n            showUpdateStatus: true,\n            showInsertStatus: true,\n            autoClear: true,\n        },\n    });\n\n    return {\n        gridOptions,\n    };\n};\n","<script lang=\"ts\" setup>\r\nimport {ref} from 'vue'\r\nimport {message} from 'ant-design-vue'\r\nimport type {VxeGridListeners} from 'vxe-table'\r\nimport useEvent from \"@/composible/useEvent\";\r\nimport Api from \"@/api\"\r\n\r\nconst router = useRouter();\r\nconst {gridOptions} = useEvent()\r\nconst xGrid = ref()\r\n\r\n\r\nconst serveApiUrl = import.meta.env.VITE_API_URL;\r\n\r\nconst routeToDetail = (id) => {\r\n  router.push(`/event/${id}/event_detail`)\r\n}\r\n// 编辑用户\r\nconst editCourse = (row: any) => {\r\n  const grid = xGrid.value\r\n  grid.setEditRow(row)\r\n}\r\n\r\n// 删除用户\r\nconst delCourse = async (row: any) => {\r\n  try {\r\n    /*    await destroy({id: row.id})*/\r\n    xGrid.value.commitProxy('query')\r\n  } catch (error) {\r\n    message.error('删除失败')\r\n  }\r\n}\r\nconst addEvent = () => {\r\n  router.push({path: `/event/form`})\r\n}\r\n\r\nconst gridEvent: VxeGridListeners = {\r\n  proxyQuery() {\r\n    /*设置选项*/\r\n    const column1 = xGrid.value.getColumnByField('course_type_id')\r\n  },\r\n}\r\n\r\nconst changeStatus = async (menuParam, row) => {\r\n  switch (menuParam.key) {\r\n    case '0':\r\n      await Api.eventController.updateStatus({id: row.id}, {\r\n        status: \"published\"\r\n      })\r\n      break\r\n    case '1':\r\n      await Api.eventController.updateStatus({id: row.id}, {\r\n        status: \"cancelled\"\r\n      })\r\n      break\r\n  }\r\n  xGrid.value.commitProxy('query')\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"demo-page-wrapper\">\r\n    <a-button type=\"primary\" @click=\"addEvent\">\r\n      <template #icon>\r\n        <plus-outlined/>\r\n      </template>\r\n      添加\r\n    </a-button>\r\n    <vxe-grid\r\n        ref=\"xGrid\"\r\n        v-bind=\"gridOptions\"\r\n        v-on=\"gridEvent\"\r\n    >\r\n      <template #event_type=\"{ row }\">\r\n        <div>\r\n          <a-tag color=\"warning\" v-if=\"row.event_type==='outdoor'\">户外</a-tag>\r\n          <a-tag color=\"success\" v-if=\"row.event_type==='professional'\">专业</a-tag>\r\n        </div>\r\n      </template>\r\n      <template #cover_image=\"{ row }\">\r\n        <div>\r\n          <vxe-image :src=\"`${serveApiUrl}${row.cover_image}`\" width=\"36\" height=\"36\"></vxe-image>\r\n        </div>\r\n      </template>\r\n      <template #action=\"{ row }\">\r\n        <a-space>\r\n          <a-popconfirm\r\n              title=\"确认删除吗？\"\r\n              ok-text=\"是\"\r\n              cancel-text=\"否\"\r\n              @confirm=\"delCourse(row)\"\r\n          >\r\n            <a-button size=\"small\" type=\"primary\" danger>删除</a-button>\r\n          </a-popconfirm>\r\n\r\n          <a-button type=\"ghost\" size=\"small\" @click=\"routeToDetail(row.id)\">详情</a-button>\r\n\r\n          <a-dropdown :trigger=\"['click']\">\r\n            <a class=\"ant-dropdown-link\">\r\n              <a-button size=\"small\" type=\"primary\">操作\r\n                <DownOutlined style=\"font-size: 12px;\"/>\r\n              </a-button>\r\n            </a>\r\n            <template #overlay>\r\n              <a-menu @click=\"(menuParam) => changeStatus(menuParam, row)\">\r\n                <a-menu-item key=\"0\">\r\n                  <span>发布</span>\r\n                </a-menu-item>\r\n                <a-menu-item key=\"1\">\r\n                  取消\r\n                </a-menu-item>\r\n              </a-menu>\r\n            </template>\r\n          </a-dropdown>\r\n\r\n        </a-space>\r\n\r\n      </template>\r\n    </vxe-grid>\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"less\">\r\n.demo-page-wrapper {\r\n  padding: 20px;\r\n}\r\n</style>"],"names":["useEvent","typeList","ref","fillOptions","Api","row1","gridOptions","item","reactive","column","page","sorts","filters","form","queryParams","firstSort","field","values","request","XEUtils","body","insertRecords","updateRecords","promises","record","cellValue","router","useRouter","xGrid","serveApiUrl","routeToDetail","id","delCourse","row","message","addEvent","gridEvent","changeStatus","menuParam"],"mappings":"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AAKA,CAAM,CAAC,CAAA,CACpE,EAGE,QAAQ,IAAID,CAAQ,CAC/B,CACJ,CACJ,EACA,QAAS,CACL,CAAC,MAAO,KAAM,MAAO,KAAM,MAAO,GAAG,EAErC,CACI,MAAO,cACP,MAAO,KACP,MAAO,CAAC,QAAS,aAAa,CAClC,EACA,CACI,MAAO,QACP,MAAO,KACP,SAAU,EACd,EACA,CACI,MAAO,OACP,MAAO,KACP,SAAU,EACd,EACA,CAEI,MAAO,WACP,MAAO,KACP,MAAO,GACP,WAAY,CACR,KAAM,UACV,CACJ,EACA,CACI,MAAO,YACP,MAAO,KACP,WAAY,CACR,KAAM,UACV,EACA,MAAO,EACX,EACA,CACI,MAAO,cACP,MAAO,IACX,EACA,CACI,MAAO,aACP,MAAO,KACP,MAAO,CACH,QAAS,YACb,CACJ,EACA,CACI,MAAO,gBACP,MAAO,OACP,SAAU,GACV,WAAY,CACR,KAAM,UACN,QAAStB,EAAS,KACtB,CACJ,EACA,CACI,MAAO,SACP,MAAO,IACX,EACA,CACI,MAAO,mBACP,MAAO,QACX,EACA,CACI,MAAO,mBACP,MAAO,QACX,EACA,CACI,MAAO,aACP,MAAO,OACP,WAAY,CACR,KAAM,eACV,CACJ,EACA,CACI,MAAO,WACP,MAAO,OACP,WAAY,CACR,KAAM,eACV,CACJ,EACA,CACI,MAAO,wBACP,MAAO,OACP,WAAY,CACR,KAAM,eACV,CACJ,EACA,CACI,MAAO,SACP,MAAO,KAEP,UAAW,CAAC,CAAC,UAAAwB,KAAe,CACxB,OAAQA,EAAW,CACf,IAAK,QACM,MAAA,KACX,IAAK,YACM,MAAA,KACX,IAAK,eACM,MAAA,MACX,IAAK,cACM,MAAA,MACX,IAAK,YACM,MAAA,KACX,IAAK,YACM,MAAA,IACf,CACJ,CACJ,EAEA,CACI,MAAO,aACP,MAAO,MACX,EACA,CACI,MAAO,SACP,MAAO,KACP,MAAO,IACP,MAAO,CACH,QAAS,QACb,CACJ,CACJ,EACA,aAAc,CAAC,EACf,aAAc,CAAC,EACf,eAAgB,CACZ,WAAY,KACZ,cAAe,EACnB,EACA,UAAW,CACP,KAAM,CACF,CAAC,SAAU,GAAM,QAAS,IAAI,EAC9B,CAAC,IAAK,EAAG,IAAK,GAAI,QAAS,kBAAkB,CACjD,EACA,GAAI,CAAC,CAAC,SAAU,GAAM,QAAS,KAAK,CACxC,EACA,WAAY,CACR,QAAS,QACT,KAAM,MACN,WAAY,GACZ,iBAAkB,GAClB,iBAAkB,GAClB,UAAW,EACf,CAAA,CACH,EAEM,MAAA,CACH,YAAAnB,CAAA,CAER,6FC9VA,MAAAoB,EAAAC,IACA,CAAA,YAAArB,GAAAN,IACA4B,EAAA1B,IAGA2B,EAAA,sBAEAC,EAAAC,GAAA,CACEL,EAAA,KAAA,UAAAK,CAAA,eAAA,CAAuC,EASzCC,EAAA,MAAAC,GAAA,CACE,GAAA,CAEEL,EAAA,MAAA,YAAA,OAAA,CAA+B,MAAA,CAE/BM,EAAA,MAAA,MAAA,CAAoB,CACtB,EAEFC,EAAA,IAAA,CACET,EAAA,KAAA,CAAA,KAAA,aAAA,CAAA,CAAiC,EAGnCU,EAAA,CAAoC,YAAA,CAGhCR,EAAA,MAAA,iBAAA,gBAAA,CAA6D,CAC/D,EAGFS,EAAA,MAAAC,EAAAL,IAAA,CACE,OAAAK,EAAA,IAAA,CAAuB,IAAA,IAEnB,MAAAlC,EAAA,gBAAA,aAAA,CAAA,GAAA6B,EAAA,IAAA,CAAqD,OAAA,WAC3C,CAAA,EAEV,MAAA,IAAA,IAEA,MAAA7B,EAAA,gBAAA,aAAA,CAAA,GAAA6B,EAAA,IAAA,CAAqD,OAAA,WAC3C,CAAA,EAEV,KAAA,CAEJL,EAAA,MAAA,YAAA,OAAA,CAA+B;;;;;"}