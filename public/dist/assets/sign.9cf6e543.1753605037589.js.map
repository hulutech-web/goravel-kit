{"version":3,"file":"sign.9cf6e543.1753605037589.js","sources":["../../src/components/sign-calendar/options.ts","../../src/components/sign-calendar/index.vue","../../src/pages/schedule/sign.vue"],"sourcesContent":["import dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport momentPlugin from \"@fullcalendar/moment\";\nimport zhLocale from \"@fullcalendar/core/locales/zh-cn\";\nimport dayjs from \"dayjs\"\n// import bootstrap5Plugin from '@fullcalendar/bootstrap5';\n//import 'bootstrap/dist/css/bootstrap.css';\n//import 'bootstrap-icons/font/bootstrap-icons.css'; // needs additional webpack config!\nimport Api from \"@/api\";\n\nconst colorPalette = [\n    '#FF0000', // Vivid Red\n    '#FF4500', // Orange Red\n    '#FFA500', // Orange\n    '#FFD700', // Gold\n    '#FFFF00', // Yellow\n    '#9ACD32', // Yellow Green\n    '#00FF00', // Lime\n    '#00FA9A', // Medium Spring Green\n    '#00FFFF', // Cyan\n    '#1E90FF', // Dodger Blue\n    '#0000FF', // Blue\n    '#8A2BE2', // Blue Violet\n    '#9932CC', // Dark Orchid\n    '#FF00FF', // Magenta\n    '#FF1493', // Deep Pink\n    '#FF69B4', // Hot Pink\n    '#FF6347', // Tomato\n    '#FF8C00', // Dark Orange\n    '#7CFC00', // Lawn Green\n    '#40E0D0'  // Turquoise\n];\n\nfunction getRandomColor() {\n    return colorPalette[Math.floor(Math.random() * colorPalette.length)];\n}\n\nconst formatTime = (timeString) => {\n    const time = new Date(timeString);\n    const hours = time.getHours().toString().padStart(2, '0');\n    const minutes = time.getMinutes().toString().padStart(2, '0');\n    return `${hours}:${minutes}`;\n}\nconst baseUrl = import.meta.env.VITE_API_URL;\nconst port = import.meta.env.VITE_API_PORT;\n\nexport default (eventClickCallback, dateClickCallback,\n                eventDidMountCallback,\n                selEventCallback,\n                eventAddCallback,\n                eventChangeCallback,\n                eventContentCallback,\n                eventMouseEnterCallback,\n                eventMouseLeaveCallback,\n                eventDropCallback, user_id) => {\n    return {\n        themeSystem: 'bootstrap', // 使用主题系统\n\n        aspectRatio: 10,\n        expandRows: true,\n        plugins: [\n            dayGridPlugin,\n            interactionPlugin,\n            timeGridPlugin,\n            momentPlugin,\n            // bootstrap5Plugin\n        ],\n        // 高度：每一格400px\n        height: \"1000px\",\n        slotMinTime: \"09:00:00\",\n        slotMaxTime: \"21:00:00\",\n        initialView: \"timeGridDay\",\n        // dayHeaderFormat: {\n        //     weekday: \"short\",\n        // },\n        contentHeight:600,\n        slotDuration: \"00:10:00\",\n        slotLabelInterval: \"01:00:00\",\n        selectMirror: true,\n        // 关闭拖拽\n        locale: zhLocale,\n        buttonText: {\n            month: \"月\",\n            week: \"周\",\n            day: \"日\",\n        },\n        headerToolbar: {\n            left: \"prev,next today\",\n            center: \"title\",\n            right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n        },\n        customButtons: {\n            button: {\n                text: 'custom',\n                click: function () {\n                    alert('clicked the custom button!');\n                }\n            }\n        },\n        selectable: false,\n        weekNumbers: true,\n        slotEventOverlap: false, //相同时间段的多个日程视觉上是否允许重叠，默认true允许\n        views: {\n            timeGridFourDay: {\n                type: \"timeGrid\",\n                duration: {\n                    days: 1,\n                },\n            },\n        },\n        events: async (fetchInfo, successCallback, failureCallback) => {\n            let data = await Api.scheduleController.list({\n                startStr: fetchInfo.startStr,\n                endStr: fetchInfo.endStr\n            })\n\n            let req = data.map(item => {\n                return {\n                    ...item,\n                    title: item.course.title,\n                    start: item.start_time,\n                    end: item.end_time,\n                }\n            })\n            await successCallback(req)\n        },\n        eventColor: \"#ffffff\",\n        eventClick: (info) => {\n            eventClickCallback(info)\n        },\n        // 点击空白处触发\n        dateClick: function (info) {\n            dateClickCallback(info)\n        },\n        eventDidMount: function (info) {\n            //每一个事件都会触发\n            eventDidMountCallback(info)\n        },\n\n        select: function (info) {\n            // 转换为中国时间\n            let startTime = new Date(info.start.setHours(info.start.getHours() + 8));\n            let endTime = new Date(info.end.setHours(info.end.getHours() + 8));\n            let newColor = getRandomColor()\n            // console.log(\"1、newColor\",newColor)\n            this.setOption('eventColor', newColor);\n            // 创建新的事件对象，并设置颜色\n            let event = {\n                title: '新事件', // 事件标题\n                start: startTime, // 开始时间\n                end: endTime, // 结束时间\n                backgroundColor: newColor, // 设置背景颜色\n                borderColor: newColor, // 设置边框颜色，可选\n                textColor: 'white', // 设置文字颜色，可选\n            };\n            //临时事件到页面\n            selEventCallback(event);\n        },\n        eventAdd: function (info) {\n            eventAddCallback(info)\n        },\n        eventChange: function (info) {\n            eventChangeCallback(info)\n        },\n        eventContent: (arg, createElement) => {\n            const startTime = arg.event.start;\n            const endTime = arg.event.end;\n            //获取背景颜色\n            const color = arg.event.backgroundColor;\n            // 创建一个容器元素来包裹事件内容\n            const containerEl = document.createElement('div');\n            containerEl.innerHTML = `\n            <div style='background-color:${color};height:100%;'>\n            <div class='bg-gray-800  text-md font-bold'>📅${formatTime(startTime)}-${formatTime(endTime)}</div>\n                <div style='padding:6px;box-sizing:border-box;'>\n                    \n                    <div class='flex justify-between items-center'>\n                    <div class='text-md font-bold'>${arg.event.extendedProps.coach.username}</div>\n                    <div class='text-md font-bold'>${arg.event.title}</div>\n                    </div>\n                    <div class='flex justify-between items-center'>\n                     <div>约(${arg.event.extendedProps.reservations.length}/${arg.event.extendedProps.max_students})名</div>\n                        <div>签(${arg.event.extendedProps.signs.length}/${arg.event.extendedProps.max_students})名</div>\n                    </div>\n                </div>\n    </div>\n    `;\n            eventContentCallback(arg, createElement, containerEl)\n            return {domNodes: [containerEl]};\n        },\n        eventMouseEnter: function (info) {\n            eventMouseEnterCallback(info)\n        },\n        eventMouseLeave: function (info) {\n            eventMouseLeaveCallback(info)\n        },\n        eventDrop: function (info) {\n            eventDropCallback(info)\n        },\n        editable: false,\n        dayMaxEventRows: 1,\n        // 设置中国时区【坑】\n        timeZone: 'local',\n        dayHeaderContent: function (args) {\n            //设置背景色，设置字体大小，使用h函数\n            return h('div', {\n                style: {\n                    width: '100%',\n                    lineHeight: '50px',\n                    fontSize: '18px',\n                    height: '50px'\n                }\n            }, args.text);\n        }\n    }\n}","<template>\n  <div>\n    <!-- 团课课程预约 -->\n    <FullCalendar :options=\"calendarOptions\" ref=\"fullCalendarRef\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport dayjs from \"dayjs\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport useOpts from \"./options\";\nimport Api from \"@/api\"\nimport { toReactive } from \"@vueuse/core\";\nconst instance = getCurrentInstance();\nconst fullCalendarRef = ref();\nconst props = defineProps({\n  modelValue: {\n    type: Object,\n    default: () => ({}),\n  }\n});\n\nconst emit = defineEmits([\"update:modelValue\"]);\n\ninterface TagEvent {\n  id: string,\n  num: number,\n  title: string,\n  groupcourse_id: number\n  groupcourse_name: string\n  start: string,\n  end: string\n  coverimage: string\n}\nconst tagArr = ref<TagEvent[]>([])\n\n\n\n// UTC格式化成本地时间\nconst formatLocalTime = (\n    timeStr: string,\n    formatter = \"YYYY-MM-DD HH:mm:ss\"\n) => {\n  if (!(timeStr && dayjs(timeStr))) return \"\";\n  // 使用 Day.js 的 parse 函数将 FullCalendar 时间解析为 Day.js 对象\n  const parsedTime = dayjs(timeStr);\n  //显示中国时间减去8小时\n  const localTime = parsedTime.subtract(8, \"hours\");\n\n  // 将 Day.js 对象格式化为所需的格式，例如 'YYYY-MM-DD HH:mm:ss'\n  const formattedTime = localTime.format(\"YYYY-MM-DD HH:mm:ss\");\n\n  return formattedTime;\n};\nconst heartbeatStyle = {\n  animation: 'heartbeat .5s infinite alternate'\n};\nlet allEventElements = [];\n// #region 功能函数\nconst evClickCbk = (info) => {\n  const eventEl = info.el;\n  const events = getEvents();\n  allEventElements.map(item=>{\n    item.style.removeProperty('animation');\n  })\n  Object.assign(eventEl.style, heartbeatStyle);\n  //提交数据到父组件\n  emit(\"update:modelValue\", info.event);\n};\n\nconst dtClickCbk = (info) => {\n  console.log(\"子组件：空白处被点击\", info);\n};\nconst mountedCbk = (info) => {\n  allEventElements.push(info.el)\n  const eventEl = info.el;\n  // console.log(\"子组件：任意时间触发时\", info)\n  eventEl.style.maxWidth=\"300px\";\n  // 添加平滑的悬停动画效果\n  eventEl.style.transition = \"all 0.3s ease-out\"; // 修正拼写错误并优化时间\n\n  // 初始状态\n  eventEl.style.transform = \"scale(1)\";\n  eventEl.style.boxShadow = \"0 2px 5px rgba(0, 0, 0, 0.1)\";\n  eventEl.style.margin=\"10px\"\n\n  // 鼠标悬停效果\n  eventEl.addEventListener('mouseenter', () => {\n    eventEl.style.boxShadow = \"0 5px 15px rgba(0, 0, 0, 0.5)\";\n    eventEl.style.transform = \"scale(0.98)\";\n    eventEl.style.zIndex = \"100\"; // 确保悬停元素在上层\n  });\n\n  // 鼠标离开效果\n  eventEl.addEventListener('mouseleave', () => {\n    eventEl.style.boxShadow = \"0 2px 5px rgba(0, 0, 0, 0.1)\";\n    eventEl.style.transform = \"scale(1)\";\n    eventEl.style.zIndex = \"\";\n  });\n};\nconst selCbk = (event) => {\n  console.log(\"子组件：选择事件选择\", event);\n};\nconst evtAddCbk = (info) => {\n  // console.log(\"子组件：添加事件被触发\", info);\n};\nconst evtCbk = (info) => {\n  console.log(\"子组件：事件被触发\", info);\n};\nconst evtContentCbk = (arg, createElement, containerEl) => {\n  console.log(\"子组件：自定义样式\");\n};\nconst evtMouseEnterCbk = (info) => {\n\n};\nconst evtMouseLeaveCbk = (info) => {\n\n};\nconst eventDropCbk = (info) => {\n  console.log(\"子组件：拖拽事件时\");\n};\nconst user_id=ref()\nconst calendarOptions = useOpts(\n    evClickCbk,\n    dtClickCbk,\n    mountedCbk,\n    selCbk,\n    evtAddCbk,\n    evtCbk,\n    evtContentCbk,\n    evtMouseEnterCbk,\n    evtMouseLeaveCbk,\n    eventDropCbk,\n    user_id.value,\n);\n//获取所有事件\nconst getEvents = () => {\n  return fullCalendarRef.value.getApi().view.calendar.getEvents();\n};\n// 通过ID获取事件\nconst getEventById = (id) => {\n  return fullCalendarRef.value.getApi().view.calendar.getEventById(id);\n};\n// 添加事件\nconst addEvent = (event) => {\n  console.log(2, \"添加事件到页面--未提交后台\", event);\n  const calendarApi = fullCalendarRef.value.getApi();\n  calendarApi.addEvent(event);\n};\n\n// 通过id删除事件\nconst removeEventById = (event) => {\n  let calendarApi = proxy.$refs[\"fullCalendar\"].getApi();\n  let calendarFunc = calendarApi.view.calendar;\n  let getEvents = calendarFunc.getEvents(); //获取数据\n  if (getEvents && getEvents.length > 0) {\n    //循环删除数据（通过ID）\n    getEvents.map((item) => {\n      if (item.id === event.id) {\n        calendarFunc.getEventById(item.id).remove();\n      }\n    });\n  }\n};\n\n// 删除所有事件\nconst removeAllEvents = () => {\n  let calendarApi = proxy.$refs[\"fullCalendar\"].getApi();\n  let calendarFunc = calendarApi.view.calendar;\n  let getEvents = calendarFunc.getEvents(); //获取数据\n  getEvents.map((item) => {\n    item.remove();\n  });\n};\n\nconst refresh = () => {\n  console.log(\"refresh\");\n  const calendarApi = fullCalendarRef.value.getApi();\n  calendarApi.removeAllEvents();\n  calendarApi.refetchEvents();\n};\n\n// 对外暴露方法refresh\ndefineExpose({\n  refresh,\n});\n// #endregion\n</script>\n\n<style>\n@keyframes heartbeat {\n  0% {\n    /*心跳放大*/\n    opacity: 0.9;\n    transform: rotate(0.2deg);\n  }\n\n  100% {\n    /*心跳缩小*/\n    opacity: 1;\n    transform: rotate(-0.2deg);\n  }\n}\n</style>","<template>\n  <div>\n      <a-row :gutter=\"[16, 16]\">\n        <a-col :span=\"16\">\n          <SignCalendar v-model=\"info\"/>\n        </a-col>\n        <a-col :span=\"8\">\n          <div class=\"w-128 h-32 min-h-32\">\n            <div class=\"w-full h-1/3 bg-black flex justify-start\">\n              <div class=\"text-white h-full px-2\" style=\"line-height: 42px;\">{{ info.title }}</div>\n            </div>\n            <div\n                class=\"w-full h-2/3 p-2  flex text-white\"\n                :style=\"{ backgroundColor: info.backgroundColor?info.backgroundColor:'rgb(226,246,255)'}\"\n            >\n              <div class=\"left flex-1 p-2\" v-if=\"info.extendedProps\">\n                <div>教练：{{ info.extendedProps.coach ? info.extendedProps.coach.username : '未知' }}</div>\n              </div>\n              <div class=\"right flex-1 p-2\">\n                <div class='flex justify-between items-center' v-if=\"info.extendedProps\">\n                  <div>约({{ info.extendedProps.reservations.length }}/{{ info.extendedProps.max_students }})名</div>\n                  <div>签({{ info.extendedProps.signs.length }}/{{ info.extendedProps.max_students }})名</div>\n                </div>\n                <div class=\"\">\n                  {{ info.start ? dayjs(info.start).format(\"YYYY-MM-DD HH:mm\") : '' }}\n                </div>\n              </div>\n            </div>\n          </div>\n          <a-divider orientation=\"left\" orientation-margin=\"0px\">\n            📅学员签到\n            <span style=\"margin-left: 8px\">\n              <template v-if=\"hasSelected\">\n                {{ `已选中 ${state.selectedRowKeys.length} 条` }}\n              </template>\n            </span>\n          </a-divider>\n          <div>\n            <p>\n              <a-button type=\"primary\" @click=\"gSign\">一键签到</a-button>\n            </p>\n            <a-table :row-selection=\"rowSelection\" :columns=\"columns\" :data-source=\"users\" row-key=\"id\" size=\"small\" :pagination=\"false\"\n                     bordered>\n              <template #bodyCell=\"{ column, text }\">\n                <template v-if=\"column.dataIndex === 'name'\">\n                  <a>{{ text }}</a>\n                </template>\n              </template>\n            </a-table>\n          </div>\n        </a-col>\n      </a-row>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport dayjs from \"dayjs\";\nimport SignCalendar from \"@/components/sign-calendar/index.vue\";\nimport Api from \"@/api\";\nimport {TableProps} from \"ant-design-vue\";\n\ntype Key = string | number;\n\ninterface DataType {\n  key: Key;\n  id: number;\n  username:string;\n  signed:boolean;\n  avatar:string;\n}\n\nconst info = ref({});\n\n\nwatch(\n    () => info,\n    (newVal) => {\n      console.log(newVal.value);\n      // @ts-ignore\n      formState.value.schedule_id = newVal.value.id;\n      getReservationUsers()\n    },\n    {\n      deep: true,\n    }\n);\nconst users = ref([]);\n\n//查看已经预约的用户\nconst getReservationUsers = async () => {\n  // @ts-ignore\n  users.value = await Api.reservationController.getUser({id: formState.value.schedule_id})\n};\nconst columns = [\n  {\n    title: \"序号\",\n    dataIndex: \"id\",\n    key: \"id\",\n  },\n  {\n    title: \"头像\",\n    dataIndex: \"avatar\",\n    key: \"avatar\",\n  },\n  {\n    title: \"用户\",\n    dataIndex: \"username\",\n    key: \"username\",\n  },\n  {\n    title: \"手机号\",\n    dataIndex: \"phone\",\n    key: \"phone\",\n  },\n];\n\nconst state = ref<{\n  selectedRowKeys: Key[];\n  loading: boolean;\n}>({\n  selectedRowKeys: [], // Check here to configure the default column\n  loading: false,\n});\nconst hasSelected = computed(() => state.value.selectedRowKeys.length > 0);\nconst rowSelection: TableProps['rowSelection'] = {\n  onChange: (selectedRowKeys: string[], selectedRows: DataType[]) => {\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n    formState.value.user_ids = selectedRows.map(item => item.id)\n  },\n  getCheckboxProps: (record: DataType) => ({\n    disabled: record.signed === true, // Column configuration not to be checked\n    name: record.username,\n  }),\n};\n\n\n//会员签到\nconst formState = ref({\n  user_ids: [],\n  schedule_id: null,\n  way: 'backend'\n});\n\nconst gSign = async () => {\n  /*\n  *\n  * UserID        uint `json:\"user_id\" form:\"user_id\"`\n\tReservationID uint `json:\"reservation_id\" form:\"reservation_id\"`\n\tScheduleID    uint `json:\"schedule_id\" form:\"schedule_id\"`\n\tWay string `json:\"way\" form:\"way\"`\n  * */\n  console.log(formState.value)\n  await Api.signController.store(formState.value)\n};\n</script>\n\n<style scoped></style>\n"],"names":["colorPalette","getRandomColor","formatTime","timeString","time","hours","minutes","useOpts","eventClickCallback","dateClickCallback","eventDidMountCallback","selEventCallback","eventAddCallback","eventChangeCallback","eventContentCallback","eventMouseEnterCallback","eventMouseLeaveCallback","eventDropCallback","user_id","dayGridPlugin","interactionPlugin","timeGridPlugin","momentPlugin","zhLocale","fetchInfo","successCallback","failureCallback","req","Api","item","info","startTime","endTime","newColor","arg","createElement","color","containerEl","args","h","getCurrentInstance","fullCalendarRef","ref","emit","__emit","heartbeatStyle","allEventElements","evClickCbk","eventEl","getEvents","dtClickCbk","mountedCbk","selCbk","event","evtAddCbk","evtCbk","evtContentCbk","evtMouseEnterCbk","evtMouseLeaveCbk","eventDropCbk","calendarOptions","__expose","calendarApi","watch","newVal","formState","getReservationUsers","users","columns","state","hasSelected","computed","rowSelection","selectedRowKeys","selectedRows","record","gSign"],"mappings":"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"}